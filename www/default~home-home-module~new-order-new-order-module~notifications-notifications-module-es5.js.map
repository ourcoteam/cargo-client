{"version":3,"sources":["node_modules/ngx-paypal/fesm2015/ngx-paypal.js","src/app/shared/new-address/new-address.component.html","src/app/shared/new-receiver/new-receiver.component.html","src/app/shared/payment-card/payment-card.component.html","src/app/shared/shipment-details/shipment-details.component.html","src/app/services/ui/loading.service.ts","src/app/shared/new-address/new-address.component.scss","src/app/shared/new-address/new-address.component.ts","src/app/shared/new-receiver/new-receiver.component.scss","src/app/shared/new-receiver/new-receiver.component.ts","src/app/shared/payment-card/payment-card.component.scss","src/app/shared/payment-card/payment-card.component.ts","src/app/shared/shared.module.ts","src/app/shared/shipment-details/shipment-details.component.scss","src/app/shared/shipment-details/shipment-details.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Injectable, NgZone, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet ScriptService = /** @class */ (() => {\r\n    class ScriptService {\r\n        /**\r\n         * @param {?} zone\r\n         */\r\n        constructor(zone) {\r\n            this.zone = zone;\r\n        }\r\n        /**\r\n         * @param {?} url\r\n         * @param {?} globalVar\r\n         * @param {?} onReady\r\n         * @return {?}\r\n         */\r\n        registerScript(url, globalVar, onReady) {\r\n            /** @type {?} */\r\n            const existingGlobalVar = ((/** @type {?} */ (window)))[globalVar];\r\n            if (existingGlobalVar) {\r\n                // global variable is present = script was already loaded\r\n                this.zone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    onReady(existingGlobalVar);\r\n                }));\r\n                return;\r\n            }\r\n            // prepare script elem\r\n            /** @type {?} */\r\n            const scriptElem = document.createElement('script');\r\n            scriptElem.id = this.getElemId(globalVar);\r\n            scriptElem.innerHTML = '';\r\n            scriptElem.onload = (/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.zone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    onReady(((/** @type {?} */ (window)))[globalVar]);\r\n                }));\r\n            });\r\n            scriptElem.src = url;\r\n            scriptElem.async = true;\r\n            scriptElem.defer = true;\r\n            // add script to header\r\n            document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n        }\r\n        /**\r\n         * @param {?} globalVar\r\n         * @return {?}\r\n         */\r\n        cleanup(globalVar) {\r\n            // remove script from DOM\r\n            /** @type {?} */\r\n            const scriptElem = document.getElementById(this.getElemId(globalVar));\r\n            if (scriptElem) {\r\n                scriptElem.remove();\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} globalVar\r\n         * @return {?}\r\n         */\r\n        getElemId(globalVar) {\r\n            return `ngx-paypal-script-elem-${globalVar}`;\r\n        }\r\n    }\r\n    ScriptService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ScriptService.ctorParameters = () => [\r\n        { type: NgZone }\r\n    ];\r\n    return ScriptService;\r\n})();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    ScriptService.prototype.zone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/paypal-script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet PayPalScriptService = /** @class */ (() => {\r\n    class PayPalScriptService {\r\n        /**\r\n         * @param {?} scriptService\r\n         */\r\n        constructor(scriptService) {\r\n            this.scriptService = scriptService;\r\n            this.paypalWindowName = 'paypal';\r\n        }\r\n        /**\r\n         * @param {?} config\r\n         * @param {?} onReady\r\n         * @return {?}\r\n         */\r\n        registerPayPalScript(config, onReady) {\r\n            this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        destroyPayPalScript() {\r\n            this.scriptService.cleanup(this.paypalWindowName);\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @return {?}\r\n         */\r\n        getUrlForConfig(config) {\r\n            /** @type {?} */\r\n            const params = [\r\n                {\r\n                    name: 'client-id',\r\n                    value: config.clientId\r\n                }\r\n            ];\r\n            if (config.currency) {\r\n                params.push({\r\n                    name: 'currency',\r\n                    value: config.currency\r\n                });\r\n            }\r\n            if (config.commit) {\r\n                params.push({\r\n                    name: 'commit',\r\n                    value: config.commit\r\n                });\r\n            }\r\n            if (config.vault) {\r\n                params.push({\r\n                    name: 'vault',\r\n                    value: config.vault\r\n                });\r\n            }\r\n            if (config.extraParams) {\r\n                params.push(...config.extraParams);\r\n            }\r\n            return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} queryParams\r\n         * @return {?}\r\n         */\r\n        getQueryString(queryParams) {\r\n            /** @type {?} */\r\n            let queryString = '';\r\n            for (let i = 0; i < queryParams.length; i++) {\r\n                /** @type {?} */\r\n                const queryParam = queryParams[i];\r\n                if (i === 0) {\r\n                    queryString += '?';\r\n                }\r\n                else {\r\n                    queryString += '&';\r\n                }\r\n                queryString += `${queryParam.name}=${queryParam.value}`;\r\n            }\r\n            return queryString;\r\n        }\r\n    }\r\n    PayPalScriptService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    PayPalScriptService.ctorParameters = () => [\r\n        { type: ScriptService }\r\n    ];\r\n    return PayPalScriptService;\r\n})();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PayPalScriptService.prototype.paypalWindowName;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    PayPalScriptService.prototype.scriptService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/paypal.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet NgxPaypalComponent = /** @class */ (() => {\r\n    class NgxPaypalComponent {\r\n        /**\r\n         * @param {?} paypalScriptService\r\n         * @param {?} cdr\r\n         * @param {?} ngZone\r\n         */\r\n        constructor(paypalScriptService, cdr, ngZone) {\r\n            this.paypalScriptService = paypalScriptService;\r\n            this.cdr = cdr;\r\n            this.ngZone = ngZone;\r\n            /**\r\n             * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n             * sharing base configuration. In such a case only a single component may register script.\r\n             */\r\n            this.registerScript = true;\r\n            /**\r\n             * Emitted when paypal script is loaded\r\n             */\r\n            this.scriptLoaded = new EventEmitter();\r\n            this.ngUnsubscribe = new Subject();\r\n            /**\r\n             * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n             */\r\n            this.initializePayPal = true;\r\n        }\r\n        /**\r\n         * @param {?} content\r\n         * @return {?}\r\n         */\r\n        set payPalButtonContainer(content) {\r\n            this.payPalButtonContainerElem = content;\r\n        }\r\n        /**\r\n         * @param {?} changes\r\n         * @return {?}\r\n         */\r\n        ngOnChanges(changes) {\r\n            if (!this.payPalButtonContainerId) {\r\n                this.payPalButtonContainerId = this.generateElementId();\r\n            }\r\n            // first time config setup\r\n            /** @type {?} */\r\n            const config = this.config;\r\n            if (changes.config.isFirstChange()) {\r\n                if (config && this.registerScript) {\r\n                    this.initPayPalScript(config, (/**\r\n                     * @param {?} payPal\r\n                     * @return {?}\r\n                     */\r\n                    (payPal) => {\r\n                        // store reference to paypal global script\r\n                        this.payPal = payPal;\r\n                        this.doPayPalCheck();\r\n                    }));\r\n                }\r\n            }\r\n            // changes to config\r\n            if (!changes.config.isFirstChange()) {\r\n                this.reinitialize(config);\r\n            }\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ngOnDestroy() {\r\n            this.paypalScriptService.destroyPayPalScript();\r\n            this.ngUnsubscribe.next();\r\n            this.ngUnsubscribe.complete();\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ngAfterViewInit() {\r\n            this.doPayPalCheck();\r\n        }\r\n        /**\r\n         * @param {?} payPal\r\n         * @return {?}\r\n         */\r\n        customInit(payPal) {\r\n            this.payPal = payPal;\r\n            this.doPayPalCheck();\r\n        }\r\n        /**\r\n         * @param {?} config\r\n         * @return {?}\r\n         */\r\n        reinitialize(config) {\r\n            this.config = config;\r\n            this.payPal = undefined;\r\n            this.paypalScriptService.destroyPayPalScript();\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n            this.initializePayPal = true;\r\n            if (this.payPalButtonContainerElem) {\r\n                while (this.payPalButtonContainerElem.nativeElement.firstChild) {\r\n                    this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n            if (this.config) {\r\n                if (!this.payPal) {\r\n                    this.initPayPalScript(this.config, (/**\r\n                     * @param {?} payPal\r\n                     * @return {?}\r\n                     */\r\n                    (payPal) => {\r\n                        // store reference to paypal global script\r\n                        this.payPal = payPal;\r\n                        this.doPayPalCheck();\r\n                    }));\r\n                }\r\n                else {\r\n                    this.doPayPalCheck();\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        doPayPalCheck() {\r\n            if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n                // make sure that id is also set\r\n                if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                    this.initializePayPal = false;\r\n                    this.initPayPal(this.config, this.payPal);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @param {?} initPayPal\r\n         * @return {?}\r\n         */\r\n        initPayPalScript(config, initPayPal) {\r\n            this.paypalScriptService.registerPayPalScript({\r\n                clientId: config.clientId,\r\n                commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n                currency: config.currency,\r\n                vault: config.vault,\r\n                extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n            }, (/**\r\n             * @param {?} paypal\r\n             * @return {?}\r\n             */\r\n            (paypal) => {\r\n                this.scriptLoaded.next(paypal);\r\n                initPayPal(paypal);\r\n            }));\r\n        }\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        generateElementId() {\r\n            return `ngx-captcha-id-${new Date().valueOf()}`;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @param {?} paypal\r\n         * @return {?}\r\n         */\r\n        initPayPal(config, paypal) {\r\n            // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\r\n            this.ngZone.runOutsideAngular((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n                /** @type {?} */\r\n                const createOrder = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                            throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\r\n                    Please choose one or the other.`);\r\n                        }\r\n                        if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                            throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\r\n                    Please define one of these to create order.`);\r\n                        }\r\n                        if (config.createOrderOnClient) {\r\n                            return actions.order.create(config.createOrderOnClient(data));\r\n                        }\r\n                        if (config.createOrderOnServer) {\r\n                            return config.createOrderOnServer(data);\r\n                        }\r\n                        throw Error(`Invalid state for 'createOrder'.`);\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const createSubscription = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.createSubscription) {\r\n                            return config.createSubscription(data, actions);\r\n                        }\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const onShippingChange = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.onShippingChange) {\r\n                            return config.onShippingChange(data, actions);\r\n                        }\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const buttonsConfig = Object.assign(Object.assign(Object.assign({ style: config.style, onApprove: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        return this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onApprove) {\r\n                                config.onApprove(data, actions);\r\n                            }\r\n                            // capture on server\r\n                            if (config.authorizeOnServer) {\r\n                                return config.authorizeOnServer(data, actions);\r\n                            }\r\n                            // capture on client\r\n                            /** @type {?} */\r\n                            const onClientAuthorization = config.onClientAuthorization;\r\n                            if (onClientAuthorization) {\r\n                                actions.order.capture().then((/**\r\n                                 * @param {?} details\r\n                                 * @return {?}\r\n                                 */\r\n                                (details) => {\r\n                                    this.ngZone.run((/**\r\n                                     * @return {?}\r\n                                     */\r\n                                    () => {\r\n                                        onClientAuthorization(details);\r\n                                    }));\r\n                                }));\r\n                                return;\r\n                            }\r\n                        }));\r\n                    }), onError: (/**\r\n                     * @param {?} error\r\n                     * @return {?}\r\n                     */\r\n                    (error) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onError) {\r\n                                config.onError(error);\r\n                            }\r\n                        }));\r\n                    }), onCancel: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onCancel) {\r\n                                config.onCancel(data, actions);\r\n                            }\r\n                        }));\r\n                    }), onClick: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onClick) {\r\n                                config.onClick(data, actions);\r\n                            }\r\n                        }));\r\n                    }), onInit: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onInit) {\r\n                                config.onInit(data, actions);\r\n                            }\r\n                        }));\r\n                    }) }, ((config.createOrderOnClient || config.createOrderOnServer) && { createOrder })), (config.createSubscription && { createSubscription })), (config.onShippingChange && { onShippingChange }));\r\n                paypal.Buttons(buttonsConfig).render(`#${this.payPalButtonContainerId}`);\r\n            }));\r\n        }\r\n    }\r\n    NgxPaypalComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    selector: 'ngx-paypal',\r\n                    template: `\r\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\r\n    `\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    NgxPaypalComponent.ctorParameters = () => [\r\n        { type: PayPalScriptService },\r\n        { type: ChangeDetectorRef },\r\n        { type: NgZone }\r\n    ];\r\n    NgxPaypalComponent.propDecorators = {\r\n        config: [{ type: Input }],\r\n        registerScript: [{ type: Input }],\r\n        scriptLoaded: [{ type: Output }],\r\n        payPalButtonContainer: [{ type: ViewChild, args: ['payPalButtonContainer', { static: false },] }]\r\n    };\r\n    return NgxPaypalComponent;\r\n})();\r\nif (false) {\r\n    /**\r\n     * Configuration for paypal.\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.config;\r\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.registerScript;\r\n    /**\r\n     * Emitted when paypal script is loaded\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.scriptLoaded;\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.payPalButtonContainerId;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.ngUnsubscribe;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.payPalButtonContainerElem;\r\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.initializePayPal;\r\n    /**\r\n     * Reference to PayPal global API\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.payPal;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.paypalScriptService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.cdr;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.ngZone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-paypal.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet NgxPayPalModule = /** @class */ (() => {\r\n    class NgxPayPalModule {\r\n    }\r\n    NgxPayPalModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        NgxPaypalComponent,\r\n                    ],\r\n                    exports: [\r\n                        NgxPaypalComponent,\r\n                    ],\r\n                    providers: [\r\n                        ScriptService,\r\n                        PayPalScriptService\r\n                    ]\r\n                },] }\r\n    ];\r\n    return NgxPayPalModule;\r\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/paypal-models.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalConfig() { }\r\nif (false) {\r\n    /**\r\n     * Currency - Defaults to USD if not provided\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.currency;\r\n    /**\r\n     * Use when creating order on client\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createOrderOnClient;\r\n    /**\r\n     * Use for creating orders on server. PayPal expects you to return 'orderId' in this method\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createOrderOnServer;\r\n    /**\r\n     * Advanced configuration\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.advanced;\r\n    /**\r\n     * Client id\r\n     * @type {?}\r\n     */\r\n    IPayPalConfig.prototype.clientId;\r\n    /**\r\n     * Shipping callback\r\n     * see https://developer.paypal.com/docs/checkout/integration-features/shipping-callback/\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onShippingChange;\r\n    /**\r\n     * Called when 'onApprove' event occurs\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onApprove;\r\n    /**\r\n     * Called when authorization on client succeeds\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onClientAuthorization;\r\n    /**\r\n     * Implement for authorizing on server side\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.authorizeOnServer;\r\n    /**\r\n     * Button style configuration\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.style;\r\n    /**\r\n     * Error handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onError;\r\n    /**\r\n     * Click handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onClick;\r\n    /**\r\n     * Cancel handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onCancel;\r\n    /**\r\n     * Init handler.\r\n     * can be used for validation, see: https://developer.paypal.com/docs/checkout/integration-features/validation/#\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onInit;\r\n    /**\r\n     * Create subscription handler\r\n     * https://developer.paypal.com/docs/subscriptions/integrate/\r\n     *\r\n     * Note: the vault property in the advanced configuration also has to be set to true\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createSubscription;\r\n    /**\r\n     * Vault - must be set to true when creating subscriptions\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.vault;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalUrlConfig() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPayPalUrlConfig.prototype.clientId;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.currency;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.commit;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.vault;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.extraParams;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOrderDetails() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.create_time;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.update_time;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.id;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.intent;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.payer;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.status;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.links;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.purchase_units;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IClientAuthorizeCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IClientAuthorizeCallbackData.prototype.links;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ILinkDescription() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ILinkDescription.prototype.href;\r\n    /** @type {?} */\r\n    ILinkDescription.prototype.rel;\r\n    /** @type {?|undefined} */\r\n    ILinkDescription.prototype.method;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IQueryParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IQueryParam.prototype.name;\r\n    /** @type {?} */\r\n    IQueryParam.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnShippingChangeData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnShippingChangeData.prototype.paymentToken;\r\n    /** @type {?} */\r\n    IOnShippingChangeData.prototype.shipping_address;\r\n    /** @type {?|undefined} */\r\n    IOnShippingChangeData.prototype.selected_shipping_method;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnShippingChangeActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.resolve;\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.reject;\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.patch;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IAdvancedConfiguration() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IAdvancedConfiguration.prototype.commit;\r\n    /** @type {?|undefined} */\r\n    IAdvancedConfiguration.prototype.extraQueryParams;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnApproveCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.orderID;\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.payerID;\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.subscriptionID;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateOrderCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateOrderCallbackActions.prototype.order;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICancelCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICancelCallbackData.prototype.orderID;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnApproveCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.redirect;\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.restart;\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.order;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnInitCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnInitCallbackActions.prototype.enable;\r\n    /** @type {?} */\r\n    IOnInitCallbackActions.prototype.disable;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateSubscriptionCallbackActions.prototype.subscription;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IInitCallbackData() { }\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionCallbackData() { }\r\n/**\r\n * @record\r\n */\r\nfunction IOnClickCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnClickCallbackActions.prototype.resolve;\r\n    /** @type {?} */\r\n    IOnClickCallbackActions.prototype.reject;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalButtonStyle() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.label;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.size;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.shape;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.color;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.layout;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.tagline;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.height;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateOrderRequest() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateOrderRequest.prototype.intent;\r\n    /** @type {?} */\r\n    ICreateOrderRequest.prototype.purchase_units;\r\n    /** @type {?|undefined} */\r\n    ICreateOrderRequest.prototype.payer;\r\n    /** @type {?|undefined} */\r\n    ICreateOrderRequest.prototype.application_context;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionRequest() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateSubscriptionRequest.prototype.plan_id;\r\n    /** @type {?|undefined} */\r\n    ICreateSubscriptionRequest.prototype.quantity;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayer() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.name;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.email_address;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.payer_id;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.birth_date;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.tax_info;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.address;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IApplicationContext() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.brand_name;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.locale;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.landing_page;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.shipping_preference;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.user_action;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.payment_method;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.return_url;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.cancel_url;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPaymentMethod() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPaymentMethod.prototype.payer_selected;\r\n    /** @type {?|undefined} */\r\n    IPaymentMethod.prototype.payee_preferred;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPhone() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPhone.prototype.phone_type;\r\n    /** @type {?|undefined} */\r\n    IPhone.prototype.phone_number;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITaxInfo() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITaxInfo.prototype.tax_id;\r\n    /** @type {?} */\r\n    ITaxInfo.prototype.tax_id_type;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPhoneNumber() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPhoneNumber.prototype.national_number;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPurchaseUnit() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPurchaseUnit.prototype.amount;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.reference_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.payee;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.payment_instruction;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.description;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.custom_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.invoice_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.soft_descriptor;\r\n    /** @type {?} */\r\n    IPurchaseUnit.prototype.items;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.shipping;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayee() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayee.prototype.email_address;\r\n    /** @type {?|undefined} */\r\n    IPayee.prototype.merchant_id;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPaymentInstructions() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPaymentInstructions.prototype.platform_fees;\r\n    /** @type {?|undefined} */\r\n    IPaymentInstructions.prototype.disbursement_mode;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPlatformFee() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPlatformFee.prototype.amount;\r\n    /** @type {?|undefined} */\r\n    IPlatformFee.prototype.payee;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITransactionItem() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.name;\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.unit_amount;\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.quantity;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.description;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.sku;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.category;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.tax;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITax() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITax.prototype.currency_code;\r\n    /** @type {?} */\r\n    ITax.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IUnitAmount() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IUnitAmount.prototype.currency_code;\r\n    /** @type {?} */\r\n    IUnitAmount.prototype.value;\r\n    /** @type {?|undefined} */\r\n    IUnitAmount.prototype.breakdown;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IMoney() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IMoney.prototype.currency_code;\r\n    /** @type {?} */\r\n    IMoney.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IUnitBreakdown() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.item_total;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.shipping;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.handling;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.tax_total;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.insurance;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.shipping_discount;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.discount;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPartyName() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.prefix;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.given_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.surname;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.middle_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.suffix;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.alternate_full_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.full_name;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IAddressPortable() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IAddressPortable.prototype.country_code;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.address_line_1;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.address_line_2;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.admin_area_2;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.admin_area_1;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.postal_code;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IShipping() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IShipping.prototype.name;\r\n    /** @type {?|undefined} */\r\n    IShipping.prototype.address;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-paypal.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxPayPalModule, NgxPaypalComponent, PayPalScriptService, ScriptService as ɵa };\n//# sourceMappingURL=ngx-paypal.js.map\n","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>\\n            {{ _translate.instant('new_address.add_new_address') }}\\n        </ion-title>\\n        <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\" slot=\\\"end\\\">\\n            <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n    <div class=\\\"white\\\">\\n        <div class=\\\"form-holder register-form\\\">\\n            <form [formGroup]=\\\"addressInfoForm\\\">\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.address_name') }}\\n                        <ion-text> * </ion-text>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"address_name\\\" type=\\\"text\\\"> </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.country') }}\\n                        <ion-text> * </ion-text>\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"country_id\\\" placeholder=\\\"Select Country\\\" interface=\\\"action-sheet\\\" (ionChange)=\\\"getRegions()\\\" [disabled]=\\\"!countries\\\">\\n                        <ion-select-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.id\\\">{{ country.name }}</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.state_region') }}\\n                        <ion-text> * </ion-text>\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"state_id\\\" placeholder=\\\"Select State/Region\\\" interface=\\\"action-sheet\\\" (ionChange)=\\\"getCities()\\\" [disabled]=\\\"!regions\\\">\\n                        <ion-select-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region.id\\\">{{ region.name }}</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.city') }}\\n                        <ion-text> * </ion-text>\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"city_id\\\" placeholder=\\\"Select City\\\" interface=\\\"action-sheet\\\" (ionChange)=\\\"getAreas()\\\" [disabled]=\\\"!cities\\\">\\n                        <ion-select-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.id\\\">{{ city.name }}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.area') }}\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"area_id\\\" placeholder=\\\"Select Area\\\" interface=\\\"action-sheet\\\" [disabled]=\\\"!areas\\\">\\n                        <ion-select-option *ngFor=\\\"let area of areas\\\" [value]=\\\"area.id\\\">{{ area.name }}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.postal_code') }}\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"postal_code\\\" type=\\\"num\\\"> </ion-input>\\n                </ion-item>\\n            </form>\\n        </div>\\n        <div id=\\\"map_canvas\\\" #map_canvas>\\n            <ion-button color=\\\"dark\\\" (click)=\\\"getCurrentLocation()\\\" class=\\\"map-btn\\\">\\n                <ion-icon name=\\\"locate\\\" slot=\\\"start\\\"></ion-icon>\\n                {{ _translate.instant('general.my_current_location') }}\\n            </ion-button>\\n            <!-- <ion-button ion-button (click)=\\\"onButtonClick()\\\">Demo</ion-button> -->\\n            <ion-img src=\\\"/assets/img/marker.svg\\\" [ngClass]=\\\"mapDragging ? 'map-marker dragging' : 'map-marker'\\\" id=\\\"DummyMarker\\\"></ion-img>\\n        </div>\\n    </div>\\n</ion-content>\\n<ion-footer class=\\\"has-action\\\">\\n    <ion-button class=\\\"btn-full btn-gradient\\\" expand=\\\"block\\\" round strong [disabled]=\\\"!addressInfoForm.valid || !(lat && lng)\\\" (click)=\\\"addNewAddress()\\\">\\n        {{ _translate.instant('new_address.add_new_address') }}\\n    </ion-button>\\n</ion-footer>\"","export default \"<ion-header class=\\\"bg-header\\\">\\n    <ion-toolbar>\\n        <ion-title>{{ _translate.instant('new_receiver.new_receiver') }}</ion-title>\\n        <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\" slot=\\\"end\\\" color=\\\"light\\\">\\n            <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n    <div class=\\\"form-holder register-form\\\">\\n        <form [formGroup]=\\\"userForm\\\">\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                    {{ _translate.instant('general.name') }}\\n                    <ion-text> * </ion-text>\\n                </ion-label>\\n                <ion-input formControlName=\\\"name\\\" type=\\\"text\\\"> </ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                    {{ _translate.instant('general.mobile') }}\\n                    <ion-text> * </ion-text>\\n                </ion-label>\\n                <ion-input formControlName=\\\"mobile\\\" type=\\\"tel\\\"> </ion-input>\\n            </ion-item>\\n        </form>\\n    </div>\\n</ion-content>\\n<ion-footer class=\\\"has-action\\\">\\n    <ion-button class=\\\"btn-full btn-gradient\\\" expand=\\\"block\\\" round strong [disabled]=\\\"!userForm.valid\\\" (click)=\\\"addUser()\\\">\\n        {{ _translate.instant('new_receiver.add_new_receiver') }}\\n    </ion-button>\\n</ion-footer>\"","export default \"<ion-header class=\\\"bg-header\\\">\\n  <ion-toolbar>\\n      <ion-title>{{ _translate.instant('general.shipment_payment_details') }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-row>\\n    <ion-col size=\\\"6\\\" *ngFor=\\\"let payment of view\\\">\\n      <ion-label color=\\\"medium\\\">{{ _translate.instant(payment.name) }} </ion-label>\\n      <p>{{ payment.amount }} {{shipment.currency_id.currency_symbol}}</p>\\n    </ion-col>\\n  </ion-row>\\n  <br>\\n  <br>\\n  <ion-row>\\n    <ion-col size=\\\"6\\\">\\n      <ion-label color=\\\"medium\\\">{{ _translate.instant('general.total_amount') }} </ion-label>\\n      <p>{{ totalAmount }} {{shipment.currency_id.currency_symbol}}</p>\\n    </ion-col>\\n    <!-- <ion-col size=\\\"6\\\">\\n      <ion-button (click)=\\\"doPay()\\\">{{ _translate.instant('general.pay') }}</ion-button>\\n    </ion-col> -->\\n  </ion-row>\\n  <ngx-paypal [config]=\\\"payPalConfig\\\"></ngx-paypal>\\n\\n</ion-content>\\n\\n\\n\"","export default \"<ion-header class=\\\"bg-header\\\">\\n    <ion-toolbar>\\n        <ion-title>{{ _translate.instant('general.shipment_details') }}</ion-title>\\n        <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\" slot=\\\"end\\\" color=\\\"light\\\">\\n            <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n    <div class=\\\"data-grid\\\">\\n        <h4>{{ _translate.instant('general.shipment_info') }}</h4>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.shipment_number') }}\\n                </ion-label>\\n                <p>{{ shData?.number }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.shipment_type') }}\\n                </ion-label>\\n                <p [innerHtml]=\\\"\\n            shData?.type == 1\\n              ? _translate.instant('general.send')\\n              : _translate.instant('general.receive')\\n          \\\"></p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.package_type') }}\\n                </ion-label>\\n                <p>{{ shData?.packaging.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.status') }}\\n                </ion-label>\\n                <p>{{ shData?.status }}</p>\\n            </ion-col>\\n            <!-- <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">Payment Type</ion-label>\\n                <p [innerHTML]=\\\"shData?.payment_type == 1 ? 'Postpaid' : 'Prepaid'\\\"></p>\\n            </ion-col> -->\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.currency') }}\\n                </ion-label>\\n                <p>{{ shData?.currency_id.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.office') }}\\n                </ion-label>\\n                <p>{{ shData?.office.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.delivery_date') }}\\n                </ion-label>\\n                <p>{{ shData?.delivery_date }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.delivery_time') }}\\n                </ion-label>\\n                <p>{{ shData?.delivery_time }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.created_at') }}\\n                </ion-label>\\n                <p>{{ shData?.created_at }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.updated_at') }}\\n                </ion-label>\\n                <p>{{ shData?.updated_at }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n\\n    <div class=\\\"data-grid\\\">\\n        <h4>{{ _translate.instant('general.shipment_details') }}</h4>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.payment_type') }}\\n                </ion-label>\\n                <p [innerHtml]=\\\"\\n            shData?.payment_type == 1\\n              ?_translate.instant('general.postpaid')\\n              : _translate.instant('general.prepaid')\\n          \\\"></p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.currency') }}\\n                </ion-label>\\n                <p>{{ shData?.currency_id.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.courier\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.courier') }}\\n                </ion-label>\\n                <p>{{ shData?.courier }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.courier_fees') }}\\n                </ion-label>\\n                <p>{{ shData?.courier_fee }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.customs_value') }}\\n                </ion-label>\\n                <p>{{ shData?.customs_value }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.package_fee\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.package_fees') }}\\n                </ion-label>\\n                <p>{{ shData?.package_fee }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.return_courier_fee\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.return_courier_fees') }}\\n                </ion-label>\\n                <p>{{ shData?.return_courier_fee }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.return_defray\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.return_defray') }}\\n                </ion-label>\\n                <p>{{ shData?.return_defray }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.return_package_fee\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.return_package_fee') }}\\n                </ion-label>\\n                <p>{{ shData?.return_package_fee }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.tax != 0\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.tax') }}\\n                </ion-label>\\n                <p>{{ shData?.tax }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.mode && shData?.mode != 0\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.mode') }}\\n                </ion-label>\\n                <p>{{ shData?.mode }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n\\n    <div class=\\\"data-grid\\\">\\n        <h4>{{ _translate.instant('general.sender_details') }}</h4>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.name') }}\\n                </ion-label>\\n                <p>{{ shData?.sender.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.mobile') }}\\n                </ion-label>\\n                <p>{{ shData?.sender.mobile }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.sender_address') }}\\n                </ion-label>\\n                <p>{{ shData?.sender_address.address }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n    <div class=\\\"data-grid\\\" *ngIf=\\\"shData?.receiver\\\">\\n        <h4>{{ _translate.instant('general.receiver_details') }}</h4>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.name') }}\\n                </ion-label>\\n                <p *ngIf=\\\"shData && shData.Received_By\\\">{{ shData.Received_By }}</p>\\n                <p *ngIf=\\\"shData && !shData.Received_By\\\">{{ shData.receiver.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.mobile') }}\\n                </ion-label>\\n                <p>{{ shData?.receiver.mobile }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.receiver_address') }}\\n                </ion-label>\\n                <p>{{ shData?.receiver_address.address }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n    <div class=\\\"data-grid\\\" *ngIf=\\\"shData?.notes\\\">\\n        <h4>\\n            {{ _translate.instant('general.notes') }} ({{ shData?.notes.length }})\\n        </h4>\\n        <ion-row *ngFor=\\\"let note of shData?.notes\\\">\\n            <ion-col size=\\\"12\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.by') }} {{ note.user }} - {{ note.date.date | date: 'short' }}\\n                </ion-label>\\n                <p>{{ note.note }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n\\n    <div class=\\\"data-grid\\\" *ngIf=\\\"shData?.history\\\">\\n        <h4>\\n            {{ _translate.instant('general.history') }} ({{ shData?.history.length }})\\n        </h4>\\n        <ion-row *ngFor=\\\"let note of shData?.history\\\">\\n            <ion-col size=\\\"12\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.by') }} {{ note.user }} - {{ note.date.date | date: 'short' }}\\n                </ion-label>\\n                <p>{{ note.note }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n\\n\\n    <!-- <div id=\\\"map_canvas\\\" #map_canvas>\\n        <ion-img src=\\\"/assets/img/marker.svg\\\" id=\\\"DummyMarker\\\"></ion-img>\\n    </div> -->\\n\\n</ion-content>\\n<ion-footer *ngIf=\\\"amount && amount != 0\\\">\\n    <ion-button (click)=\\\"payForShipment()\\\">\\n        <ion-icon name=\\\"receipt\\\"></ion-icon>\\n        <ion-label>{{_translate.instant('general.payForShipment')  }}</ion-label>\\n    </ion-button>\\n</ion-footer>\"","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  constructor(public loadingController: LoadingController) {}\n\n  async simpleLoading() {\n    const loading = await this.loadingController.create({\n      translucent: true\n    });\n    await loading.present();\n  }\n\n  async loadingDismiss() {\n    this.loadingController.dismiss();\n  }\n}\n","export default \"#map_canvas {\\n  width: 100%;\\n  height: 20vh;\\n  border-radius: 15px;\\n  z-index: 999999;\\n}\\n#map_canvas ion-img.map-marker {\\n  max-width: 60px;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%) scale(1);\\n  opacity: 1;\\n  transition: all 0.2s;\\n}\\n#map_canvas ion-img.map-marker.dragging {\\n  transform: translate(-50%, -50%) scale(1.1);\\n  opacity: 0.5;\\n}\\n#map_canvas ion-button.map-btn {\\n  position: absolute;\\n  z-index: 2;\\n  border-radius: 15px;\\n  --border-radius: 15px;\\n}\\nion-backdrop {\\n  display: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zcG90bGF5ZXIvRG93bmxvYWRzL2NhcmdvLWN1c3RvbWVyL3NyYy9hcHAvc2hhcmVkL25ldy1hZGRyZXNzL25ldy1hZGRyZXNzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvbmV3LWFkZHJlc3MvbmV3LWFkZHJlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtBQ0NKO0FEQUk7RUFDSSxlQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSx5Q0FBQTtFQUNBLFVBQUE7RUFDQSxvQkFBQTtBQ0VSO0FERFE7RUFDSSwyQ0FBQTtFQUNBLFlBQUE7QUNHWjtBREFJO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtBQ0VSO0FERUE7RUFDSSx3QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL25ldy1hZGRyZXNzL25ldy1hZGRyZXNzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21hcF9jYW52YXMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMjB2aDtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIHotaW5kZXg6IDk5OTk5OTtcbiAgICBpb24taW1nLm1hcC1tYXJrZXIge1xuICAgICAgICBtYXgtd2lkdGg6IDYwcHg7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEpO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgJi5kcmFnZ2luZyB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxLjEpO1xuICAgICAgICAgICAgb3BhY2l0eTogMC41O1xuICAgICAgICB9XG4gICAgfVxuICAgIGlvbi1idXR0b24ubWFwLWJ0biB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgICAgLS1ib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIH1cbn1cblxuaW9uLWJhY2tkcm9wIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59IiwiI21hcF9jYW52YXMge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyMHZoO1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICB6LWluZGV4OiA5OTk5OTk7XG59XG4jbWFwX2NhbnZhcyBpb24taW1nLm1hcC1tYXJrZXIge1xuICBtYXgtd2lkdGg6IDYwcHg7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEpO1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbn1cbiNtYXBfY2FudmFzIGlvbi1pbWcubWFwLW1hcmtlci5kcmFnZ2luZyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEuMSk7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbiNtYXBfY2FudmFzIGlvbi1idXR0b24ubWFwLWJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMjtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgLS1ib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuXG5pb24tYmFja2Ryb3Age1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport {\n  ModalController,\n  Platform,\n  LoadingController,\n  ToastController,\n  NavController,\n  NavParams\n} from '@ionic/angular';\nimport {\n  GoogleMaps,\n  GoogleMap,\n  GoogleMapsEvent,\n  Marker,\n  GoogleMapsAnimation,\n  MyLocation,\n  Environment,\n  Geocoder,\n  BaseArrayClass,\n  GeocoderResult\n} from '@ionic-native/google-maps';\nimport { ApiService } from '../../services/api.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { IonInput } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-address',\n  templateUrl: './new-address.component.html',\n  styleUrls: ['./new-address.component.scss']\n})\nexport class NewAddressComponent implements OnInit, OnDestroy {\n  @ViewChild('map_canvas', { static: false }) mapCanvas: ElementRef;\n  map: GoogleMap;\n  loading: any;\n\n  dummyMarker: any;\n\n  mapDragging = false;\n\n  countries;\n  cities;\n  regions;\n  areas;\n\n  lat;\n  lng;\n\n  selectedAddress;\n\n  type;\n\n  receiverID;\n\n  public addressInfoForm: FormGroup;\n  constructor(\n    public modalController: ModalController,\n    private platform: Platform,\n    public loadingCtrl: LoadingController,\n    public toastCtrl: ToastController,\n    public apiService: ApiService,\n    public formBuilder: FormBuilder,\n    private navCtrl: NavController,\n    private authService: AuthService,\n    private navParams: NavParams,\n    public _translate: TranslateService\n  ) {\n    this.addressInfoForm = formBuilder.group({\n      address_name: ['', Validators.required],\n      country_id: ['', Validators.required],\n      state_id: ['', Validators.required],\n      city_id: ['', Validators.required],\n      area_id: [null],\n      postal_code: [null]\n    });\n  }\n\n  async ngOnInit() {\n    await this.platform.ready();\n    this.getCountries();\n    this.type = this.navParams.get('type');\n    this.receiverID = this.navParams.get('receiverID');\n    // console.log(this.type);\n    // console.log(this.receiverID);\n    this.dummyMarker = document.getElementById('DummyMarker');\n  }\n\n  ngOnDestroy() {\n    const nodeList = document.querySelectorAll('._gmaps_cdv_');\n    for (let k = 0; k < nodeList.length; ++k) {\n      nodeList.item(k).classList.remove('_gmaps_cdv_');\n    }\n  }\n\n\n  async createLoader () {\n    let loader = await this.loadingCtrl.create({\n      message: this._translate.instant('general.please_wait')\n    });\n    loader.present();\n    return loader;\n  }\n\n  async getCountries() {\n    let loader = await this.createLoader()\n    this.apiService.getCountries()\n    .pipe(finalize(() => loader.dismiss()))\n    .subscribe((countries: any) => {\n      this.countries = countries;\n    });\n  }\n\n  async getRegions() {\n    let loader = await this.createLoader()\n    this.apiService\n      .getRegions(this.addressInfoForm.get('country_id').value)\n      .pipe(finalize(() => loader.dismiss()))\n      .subscribe((regions: any) => {\n        this.regions = regions;\n      });\n  }\n\n  async getCities() {\n    let loader = await this.createLoader()\n    this.apiService\n      .getCities(this.addressInfoForm.get('state_id').value)\n      .pipe(finalize(() => loader.dismiss()))\n      .subscribe((cities: any) => {\n        this.cities = cities;\n      });\n  }\n\n  async getAreas() {\n    let loader = await this.createLoader()\n    this.getAddressCenter();\n    this.apiService\n      .getAreas(this.addressInfoForm.get('city_id').value)\n      .pipe(finalize(() => loader.dismiss()))\n      .subscribe((areas: any) => {\n        this.areas = areas;\n      });\n  }\n\n  searchForName(itemID, arrayItems) {\n    const res = arrayItems.filter(item => item.id === itemID);\n    // console.log(res);\n    return res[0].name;\n  }\n\n  ionViewDidEnter() {\n    this.loadMap();\n  }\n\n  async closeModal() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n\n  loadMap() {\n    Environment.setEnv({\n      API_KEY_FOR_BROWSER_RELEASE: 'AIzaSyDvYLf1yswB12mE2qGDxDmlBJOF_Su-CCs',\n      API_KEY_FOR_BROWSER_DEBUG: 'AIzaSyDvYLf1yswB12mE2qGDxDmlBJOF_Su-CCs'\n    });\n    this.map = GoogleMaps.create(this.mapCanvas.nativeElement, {\n      camera: {\n        target: {\n          lat: 31.032260599999997,\n          lng: 31.36069329999998\n        },\n        zoom: 5\n      }\n    });\n    this.map.getMyLocation().then((location: MyLocation) => {\n      // console.log(JSON.stringify(location, null, 2));\n\n      // Move the map camera to the location with animation\n      this.map.animateCamera({\n        target: location.latLng,\n        zoom: 5\n      });\n    });\n    this.map\n      .addEventListener(GoogleMapsEvent.CAMERA_MOVE_START)\n      .subscribe(data => {\n        this.mapDragging = true;\n        this.dummyMarker.classList.add('dragging');\n        // console.log('Dragging');\n      });\n    this.map\n      .addEventListener(GoogleMapsEvent.CAMERA_MOVE_END)\n      .subscribe(data => {\n        // console.log(data);\n        this.mapDragging = false;\n        this.dummyMarker.classList.remove('dragging');\n        // console.log(this.map.getCameraTarget());\n        const location = this.map.getCameraTarget();\n        this.lat = location.lat;\n        this.lng = location.lng;\n        // console.log(this.lat);\n        // console.log(this.lng);\n      });\n  }\n\n  async getAddressCenter() {\n    const addressArray = {\n      country: this.searchForName(\n        this.addressInfoForm.get('country_id').value,\n        this.countries\n      ),\n      region: this.searchForName(\n        this.addressInfoForm.get('state_id').value,\n        this.regions\n      ),\n      city: this.searchForName(\n        this.addressInfoForm.get('city_id').value,\n        this.cities\n      )\n      // area: this.searchForName(\n      //   this.addressInfoForm.get('area_id').value,\n      //   this.areas\n      // )\n    };\n    const addressText = `${addressArray.city} ${addressArray.region} ${addressArray.country}`;\n    this.loading = await this.loadingCtrl.create({\n      message: this._translate.instant('general.please_wait')\n    });\n    await this.loading.present();\n    if(this.map) this.map.clear();\n\n    // Address -> latitude,longitude\n    // const searchAddress = `${this.addressInfoForm.get('')}`\n    Geocoder.geocode({\n      address: addressText\n    }).then((results: GeocoderResult[]) => {\n      // console.log(results);\n      this.loading.dismiss();\n\n      if (results.length > 0) {\n        this.map.animateCamera({\n          target: results[0].position,\n          zoom: 15\n        });\n        this.lat = results[0].position.lat;\n        this.lng = results[0].position.lng;\n        // console.log(this.lat);\n        // console.log(this.lng);\n      } else {\n        alert('Not found');\n      }\n    });\n  }\n  async getCurrentLocation() {\n    if(this.map) this.map.clear();\n\n    this.loading = await this.loadingCtrl.create({\n      message: this._translate.instant('general.please_wait')\n    });\n    await this.loading.present();\n\n    // Get the location of you\n    this.map\n      .getMyLocation()\n      .then((location: MyLocation) => {\n        this.loading.dismiss();\n        // console.log(JSON.stringify(location, null, 2));\n\n        // Move the map camera to the location with animation\n        this.map.animateCamera({\n          target: location.latLng,\n          zoom: 17,\n          tilt: 30\n        });\n      })\n      .catch(err => {\n        this.loading.dismiss();\n        // console.log(err.error_message);\n      });\n  }\n\n  async showToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      duration: 2000,\n      position: 'bottom'\n    });\n\n    toast.present();\n  }\n\n  async showCustomToast(message: string, msgColor: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      color: msgColor,\n      duration: 2000,\n      position: 'bottom'\n    });\n\n    toast.present();\n  }\n\n  addNewAddress() {\n    let desiredUser = this.authService.userData.id;\n    if (this.type === 'receiver' && this.receiverID) {\n      desiredUser = this.receiverID;\n    }\n    const addressData = {\n      data: this.addressInfoForm.value,\n      lat: this.lat,\n      lng: this.lng\n    };\n    this.apiService\n      .addSenderAddress(this.authService.userToken, desiredUser, addressData)\n      .subscribe(\n        (res: any) => {\n          this.showCustomToast(\n            `${this._translate.instant('new_address.new_address')} ( ${\n              res.name\n            } ) ${this._translate.instant('general.has_been_added')}`,\n            'success'\n          );\n          let addressFor;\n          if (this.type === 'receiver') {\n            addressFor = 'receiver';\n          } else {\n            addressFor = 'sender';\n          }\n          res.for = addressFor;\n          console.log(res);\n          this.modalController.dismiss(res, 'done');\n        },\n        error => {\n          this.showCustomToast(error, 'danger');\n        }\n      );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9uZXctcmVjZWl2ZXIvbmV3LXJlY2VpdmVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport {\n  ModalController,\n  Platform,\n  LoadingController,\n  ToastController,\n  NavController,\n  NavParams\n} from '@ionic/angular';\nimport { ApiService } from '../../services/api.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { LoadingService } from '../../services/ui/loading.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-new-receiver',\n  templateUrl: './new-receiver.component.html',\n  styleUrls: ['./new-receiver.component.scss']\n})\nexport class NewReceiverComponent implements OnInit {\n  public userForm: FormGroup;\n  constructor(\n    public modalController: ModalController,\n    private platform: Platform,\n    public loadingCtrl: LoadingController,\n    public toastCtrl: ToastController,\n    public apiService: ApiService,\n    public formBuilder: FormBuilder,\n    private navCtrl: NavController,\n    private authService: AuthService,\n    private navParams: NavParams,\n    public loadingUI: LoadingService,\n    public _translate: TranslateService\n  ) {\n    this.userForm = formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(5)]],\n      mobile: ['', [Validators.required, Validators.minLength(9)]]\n    });\n  }\n\n  ngOnInit() {}\n\n  async closeModal() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n\n  async showToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      duration: 2000,\n      position: 'bottom'\n    });\n\n    toast.present();\n  }\n\n  async showCustomToast(message: string, msgColor: string) {\n    const toast2 = await this.toastCtrl.create({\n      message,\n      color: msgColor,\n      duration: 2000,\n      position: 'bottom'\n    });\n\n    toast2.present();\n  }\n\n  addUser() {\n    this.loadingUI.simpleLoading();\n    this.apiService\n      .addNewReceiver(this.authService.userToken, this.userForm.value)\n      .subscribe(\n        (newRec: any) => {\n          this.loadingUI.loadingDismiss();\n          // console.log(newRec);\n          this.showCustomToast(\n            `${this._translate.instant('new_receiver.new_receiver')} ( ${\n              newRec.name\n            } ) ${this._translate.instant('general.has_been_added')}`,\n            'success'\n          );\n          this.modalController.dismiss(newRec, 'done');\n        },\n        error => {\n          this.loadingUI.loadingDismiss();\n          // console.log(error);\n          this.showCustomToast(\n            `${this._translate.instant('error.mobile_taken')}`,\n            'danger'\n          );\n        }\n      );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9wYXltZW50LWNhcmQvcGF5bWVudC1jYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n// import { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\nimport { AlertController, LoadingController, ModalController, NavParams } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICreateOrderRequest, IPayPalConfig } from 'ngx-paypal';\nimport { finalize } from 'rxjs/operators';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-payment-card',\n  templateUrl: './payment-card.component.html',\n  styleUrls: ['./payment-card.component.scss'],\n})\nexport class PaymentCardComponent implements OnInit {\n  view;\n  shipment;\n  totalAmount;\n\n  public payPalConfig:IPayPalConfig;\n\n\n  private doPay(): void {\n    this.payPalConfig = {\n      currency: 'USD',\n      clientId:\"sb\",\n      createOrderOnClient: (data) => <ICreateOrderRequest>{\n        intent: 'CAPTURE',\n        application_context:{\n          return_url:\"http://localhost:8100/tabs/home\",\n          payment_method:{\n            \"payee_preferred\": \"UNRESTRICTED\"\n          },\n        },\n        purchase_units: [\n          {\n            amount: {\n              currency_code: 'USD',\n              value: ''+this.totalAmount,\n              breakdown: {\n                item_total: {\n                  currency_code: 'USD',\n                  value: ''+this.totalAmount\n                }\n              }\n            },\n          }\n        ]\n      },\n      advanced: {\n        commit: 'true'\n      },\n      style: {\n        label: 'paypal',\n        layout: 'vertical'\n      },\n      onApprove: (data, actions) => {\n        console.log('onApprove - transaction was approved, but not authorized', data, actions);\n        this.errorPayment(this._translate.instant('general.paymentNoAuth'));\n      },\n      onClientAuthorization: (data) => {\n        this.paymentSuccess()\n      },\n      onError: err => {\n        console.log('OnError', err);\n        this.errorPayment(this._translate.instant('general.errorPayment'));\n      },\n    };\n  }\n\n  \n  constructor(\n    // private payPal: PayPal,\n    private navParams:NavParams,\n    public _translate:TranslateService,\n    private apiService:ApiService,\n    private authService:AuthService,\n    private modalCtrl:ModalController,\n    private alertCtrl:AlertController,\n    private loadingCtrl:LoadingController\n\n  ) { }\n\n  async showLoading() {\n    const loading = await this.loadingCtrl.create({\n      message: this._translate.instant('general.loading')\n    });\n    await loading.present();\n  }\n\n  async hideLoading() {\n    this.loadingCtrl.dismiss();\n  }\n  \n  ngOnInit() {\n    this.view = this.navParams.get('view');\n    this.shipment = this.navParams.get('shipment');\n    this.totalAmount =  this.navParams.get('amount');\n    this.doPay();\n  }\n\n\n\n  paymentSuccess() {\n    this.showLoading();\n\n    let params = {\n      token:this.authService.userToken,\n      id:this.shipment.id,\n      paymant_method:'paypal',\n      tax:(this.shipment.tax * +this.shipment.courier_fee_amount) / 100,\n      insurance: (this.shipment.insurance * +this.shipment.courier_fee_amount) / 100,\n      custom_value: +this.shipment.customs_value.substr(this.shipment.currency_id.currency_symbol.length),\n      return_courier_fee: +this.shipment.return_courier_fee_amount,\n      courier_fee:+this.shipment.courier_fee_amount,\n      package_fee:+this.shipment.package_fee_amount\n    }\n\n    this.apiService.payShipmentOrder(params)\n    .pipe(\n      finalize(() => this.hideLoading())\n    )\n    .subscribe(r => {\n      this.alertCtrl.create({\n        message:this._translate.instant('general.requestIsSent'),\n        buttons:[this._translate.instant('general.gotcha')]\n      }).then(a => {\n        a.present()\n        a.onDidDismiss().then(() => {\n          this.modalCtrl.dismiss('','','payShipment')\n        })\n      })\n      console.log('payShipmentOrder', r)\n    })\n\n  }\n\n\n  errorPayment(message) {\n    this.alertCtrl.create({\n      buttons:[this._translate.instant(\"general.gotcha\")]\n    })\n  }\n\n}\n\n\n/*\ntoken\nid or number for shipment\ncustom_value\ntax\ninsurance\nreturn_courier_fee\ncourier_fee\npackage_fee\npaymant_method  دي بحالتنا الحالية ثابتة القيمة لازم تحطها  paypal\n\n\n*/\n\n/*\n\n\n\nthis.payPal.init({\n      PayPalEnvironmentProduction: '',\n      PayPalEnvironmentSandbox: 'AWt7Zerxyd4Z2qvEprql2XgA5yl1oJv6TwucfZUdCogciyCzNJrfPwCp2-cbYEmkoZRoXTigFIbZ59l3'\n    }).then(() => {\n      // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n      this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n        // Only needed if you get an \"Internal Service Error\" after PayPal login!\n        //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n      })).then(() => {\n        \n        // let payment = new PayPalPayment(''+amount, this.shData.currency_id.currency_symbol, 'Description', 'sale');\n        let payment = new PayPalPayment(''+this.totalAmount, 'USD', 'Description', 'sale');\n        this.payPal.renderSinglePaymentUI(payment).then(() => {\n          // Successfully paid\n          console.log('uccessfully paid')\n          this.paymentSuccess()\n          // Example sandbox response\n          //\n          // {\n          //   \"client\": {\n          //     \"environment\": \"sandbox\",\n          //     \"product_name\": \"PayPal iOS SDK\",\n          //     \"paypal_sdk_version\": \"2.16.0\",\n          //     \"platform\": \"iOS\"\n          //   },\n          //   \"response_type\": \"payment\",\n          //   \"response\": {\n          //     \"id\": \"PAY-1AB23456CD789012EF34GHIJ\",\n          //     \"state\": \"approved\",\n          //     \"create_time\": \"2016-10-03T13:33:33Z\",\n          //     \"intent\": \"sale\"\n          //   }\n          // }\n        }, (e) => {\n          alert(' Error or render' + e)\n          // Error or render dialog closed without being successful\n        }); \n      }, () => {\n        // Error in configuration\n        alert('Error in configuration')\n      });\n    }, () => {\n      alert(\"Error in initialization, maybe PayPal isn't supported or something else\")\n      // Error in initialization, maybe PayPal isn't supported or something else\n    });\n\n\n*/","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewAddressComponent } from '../shared/new-address/new-address.component';\n\nimport { NewReceiverComponent } from '../shared/new-receiver/new-receiver.component';\n\nimport { ShipmentDetailsComponent } from '../shared/shipment-details/shipment-details.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PaymentCardComponent } from './payment-card/payment-card.component';\nimport { NgxPayPalModule } from 'ngx-paypal';\n\n@NgModule({\n  declarations: [\n    NewAddressComponent,\n    ShipmentDetailsComponent,\n    NewReceiverComponent,\n    PaymentCardComponent\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    NgxPayPalModule\n  ],\n  exports: [\n    NewAddressComponent,\n    ShipmentDetailsComponent,\n    NewReceiverComponent,\n    PaymentCardComponent\n  ],\n  entryComponents: [\n    NewAddressComponent,\n    ShipmentDetailsComponent,\n    NewReceiverComponent,\n    PaymentCardComponent\n  ]\n})\nexport class SharedModule {}\n","export default \".data-grid {\\n  text-align: start;\\n  font-size: 14px;\\n  font-weight: 400;\\n  margin-bottom: 10px;\\n}\\n.data-grid h4 {\\n  color: var(--ion-color-primary);\\n}\\n.data-grid ion-label {\\n  text-transform: uppercase;\\n}\\n.data-grid p span.dimmed {\\n  color: var(--ion-color-medium);\\n}\\nion-footer ion-button {\\n  display: block;\\n  margin: 0;\\n  border-radius: 0;\\n  --border-radius: 0;\\n  height: 45px;\\n  --height: 45px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zcG90bGF5ZXIvRG93bmxvYWRzL2NhcmdvLWN1c3RvbWVyL3NyYy9hcHAvc2hhcmVkL3NoaXBtZW50LWRldGFpbHMvc2hpcG1lbnQtZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2hhcmVkL3NoaXBtZW50LWRldGFpbHMvc2hpcG1lbnQtZGV0YWlscy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUNDRjtBREFFO0VBQ0UsK0JBQUE7QUNFSjtBREFFO0VBQ0UseUJBQUE7QUNFSjtBRENJO0VBQ0UsOEJBQUE7QUNDTjtBREtFO0VBQ0UsY0FBQTtFQUNBLFNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9zaGlwbWVudC1kZXRhaWxzL3NoaXBtZW50LWRldGFpbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YS1ncmlkIHtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgaDQge1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gIH1cbiAgaW9uLWxhYmVsIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG4gIHAge1xuICAgIHNwYW4uZGltbWVkIHtcbiAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcbiAgICB9XG4gIH1cbn1cblxuaW9uLWZvb3RlciB7XG4gIGlvbi1idXR0b24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIC0tYm9yZGVyLXJhZGl1czogMDtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgLS1oZWlnaHQ6IDQ1cHg7XG4gIH1cbn0iLCIuZGF0YS1ncmlkIHtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbi5kYXRhLWdyaWQgaDQge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xufVxuLmRhdGEtZ3JpZCBpb24tbGFiZWwge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLmRhdGEtZ3JpZCBwIHNwYW4uZGltbWVkIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xufVxuXG5pb24tZm9vdGVyIGlvbi1idXR0b24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICAtLWJvcmRlci1yYWRpdXM6IDA7XG4gIGhlaWdodDogNDVweDtcbiAgLS1oZWlnaHQ6IDQ1cHg7XG59Il19 */\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { NavParams, ModalController, LoadingController, AlertController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service';\nimport { ApiService } from '../../services/api.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GoogleMaps } from '@ionic-native/google-maps';\nimport { PusherService } from 'src/app/services/pusher.service';\nimport { finalize } from 'rxjs/operators';\nimport { PaymentCardComponent } from '../payment-card/payment-card.component';\n// import { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\n\n@Component({\n  selector: 'app-shipment-details',\n  templateUrl: './shipment-details.component.html',\n  styleUrls: ['./shipment-details.component.scss']\n})\nexport class ShipmentDetailsComponent implements OnInit {\n  // @ViewChild('map_canvas', { static: false }) mapCanvas: ElementRef;\n\n  shipmentID;\n  userToken;\n\n  shData;\n  dummyMarker;\n\n  locationStream\n  constructor(\n    public navParams: NavParams,\n    public modalController: ModalController,\n    public authService: AuthService,\n    public apiService: ApiService,\n    public _translate: TranslateService,\n    public loadingCtrl: LoadingController,\n    private alertCtrl:AlertController\n    // private payPal:PayPal\n    // private pusherService:PusherService\n  ) {}\n\n  messegeEvent = {\n    message: function(msg) {\n      console.log(msg.message);\n    }\n  }\n\n  ionViewWillLeave() {\n    // this.pusherService.pubnub.removeListener(this.messegeEvent);\n  }\n\n  amount = 100;\n  view;\n\n  openPaymentModal(amount, view) {\n    console.log(view)\n    console.log(amount)\n    this.amount = amount;\n    this.view = view;\n\n    // this.alertCtrl.create({\n    //   message:this._translate.instant('general.shipmentNeedPayment'),\n    //   buttons:[\n    //     {\n    //       text:this._translate.instant('actions.pay'),\n    //       handler:() => {\n    //         this.modalController.create({\n    //           component:PaymentCardComponent,\n    //           backdropDismiss:true,\n    //           id:'payShipment',\n    //           componentProps:{\n    //             amount:amount.toFixed(2),view,shipment:this.shData\n    //           }\n    //         }).then(m => m.present() )\n    //       }\n    //     },\n    //     {\n    //       text:this._translate.instant('actions.cancel'),\n    //       role:'cancel'\n    //     }\n    //   ]\n    // }).then(a => a.present())\n   \n  }\n\n  payForShipment () {\n    // this.alertCtrl.create({\n    //   message:this._translate.instant('general.shipmentNeedPayment'),\n    //   buttons:[\n    //     {\n    //       text:this._translate.instant('actions.pay'),\n    //       handler:() => {\n    //         this.modalController.create({\n    //           component:PaymentCardComponent,\n    //           backdropDismiss:true,\n    //           id:'payShipment',\n    //           componentProps:{\n    //             amount:this.amount.toFixed(2),view:this.view,shipment:this.shData\n    //           }\n    //         }).then(m => m.present() )\n    //       }\n    //     },\n    //     {\n    //       text:this._translate.instant('actions.cancel'),\n    //       role:'cancel'\n    //     }\n    //   ]\n    // }).then(a => a.present())\n\n\n    this.modalController.create({\n      component:PaymentCardComponent,\n      backdropDismiss:true,\n      id:'payShipment',\n      componentProps:{\n        amount:this.amount.toFixed(2),view:this.view,shipment:this.shData\n      }\n    }).then(m => m.present() )\n    \n  }\n  ngOnInit() {\n    // show payment modal if requested ==  \"Approved\" && payment_type == 2\n\n\n\n    console.log(this.authService.userData)\n    this.showLoading();\n    this.shipmentID = this.navParams.get('shipment_id');\n    this.userToken = this.navParams.get('userToken');\n    // console.log(this.shipmentID);\n    this.apiService\n      .getShipmentDetails(this.shipmentID, this.authService.userToken)\n      .pipe(finalize(() => this.hideLoading()))\n      .subscribe((shipment: any) => {\n        this.shData = shipment;\n\n        \n        // this.openPaymentModal(100,[{ name:'general.customs_value', amount:100 }])\n\n\n          console.log(shipment.paymentstatus ,this.shData);\n        if(shipment.paymentstatus == false) {\n          let tax = (shipment.tax * +shipment.courier_fee_amount) / 100,\n          insurance =  (shipment.insurance * +shipment.courier_fee_amount) / 100,\n          customs_value = +shipment.customs_value.substr(shipment.currency_id.currency_symbol.length),\n          amount = tax + insurance + +shipment.courier_fee_amount + customs_value;\n  \n          let paymentView = [\n            \n          ]\n  \n          if(tax) paymentView.push({ name:'general.tax', amount:tax })\n          if(insurance)  paymentView.push({ name:'general.insurance', amount:insurance })\n          if(+shipment.courier_fee_amount)  paymentView.push({ name:'general.courier_fee_amount', amount:+shipment.courier_fee_amount })\n          if(customs_value) paymentView.push({ name:'general.customs_value', amount:customs_value })\n  \n          \n  \n          var status = [1, 9 , 3, 4];\n          if (status.includes(shipment.requested)  && shipment.payment_type == 2) {\n            // prepaid\n            console.log('prepaid')\n            if (shipment.return_package_fee == 2 && shipment.sender.id == this.authService.userData.id) {\n              paymentView.push({name:'general.return_courier_fee', amount: +shipment.return_courier_fee_amount})\n              this.openPaymentModal(amount + +shipment.return_courier_fee_amount, paymentView)\n            } else if(+shipment.return_package_fee == 1 && shipment.receiver.id == this.authService.userData.id) {\n              paymentView = [\n                { name:'general.package_fee', amount: +shipment.package_fee_amount },\n                {name:'general.return_courier_fee', amount: +shipment.return_courier_fee_amount}\n              ]\n              this.openPaymentModal( +shipment.package_fee_amount + +shipment.return_courier_fee_amount, paymentView)\n            } else {\n              this.openPaymentModal(amount, paymentView)\n            }\n  \n            // postpaid\n          } else if (shipment.requested === 4 && shipment.payment_type == 1) {\n            console.log('postpaid')\n            if (shipment.return_defray == 1 && shipment.receiver.id === this.authService.userData.id ) {\n              paymentView.push( { name:'general.package_fee', amount: +shipment.package_fee_amount })\n              this.openPaymentModal(amount  + +shipment.package_fee_amount, paymentView)\n            } else if (shipment.return_package_fee == 1 && shipment.receiver.id === this.authService.userData.id ) {\n              paymentView.push({ name:'general.package_fee', amount: +shipment.package_fee_amount }, { name:'general.return_courier_fee', amount: shipment.return_courier_fee_amount })\n              this.openPaymentModal(amount  + +shipment.package_fee_amount + +shipment.return_courier_fee_amount, paymentView)\n            } else if (shipment.return_package_fee == 2 && shipment.sender.id == this.authService.userData.id) {\n              paymentView = [\n                {name:'general.return_courier_fee', amount: +shipment.return_courier_fee_amount}\n              ]\n              this.openPaymentModal(+shipment.return_courier_fee_amount, paymentView)\n            } else {\n              this.openPaymentModal(amount, paymentView)\n            }\n  \n          }\n\n        }\n        \n\n        // this.openPaymentModal()\n\n        // if(this.shData.assigned && this.shData.assigned.id) {\n        //   this.pusherService.pubnub.subscribe({\n        //     channels: [this.shData.assigned.id]\n        //   });\n          \n        //   this.pusherService.pubnub.addListener(this.messegeEvent)\n        // }\n        \n\n        \n\n/*\n        setInterval(() => {\n          this.pusherService.uploadPusher.trigger('location' + this.shData.assigned.id, 'client-updateLocation', {lat:'d', lngl:''})\n\n          // let x = this.pusherService.pusher.send_event('client-updateLocation',  {lat:'d', lngl:''} , 'location'+this.shData.assigned.id )\n          // console.log('send eeveen', x)\n        }, 1000)\n\n\n        console.log(this.shData.assigned.id, this.pusherService.pusher);\n\n        this.locationStream = this.pusherService.pusher.subscribe( 'location' + this.shData.assigned.id);\n        this.locationStream.trigger('client-updateLocation', {lat:'d', lngl:''})\n\n        console.log(this.locationStream)\n        this.locationStream.bind('client-updateLocation', (Data) =>{\n          console.log('Data pusher', Data);\n        });\n        this.pusherService.pusher.bind('client-updateLocation', (Data) =>{\n          console.log('Data pusher', Data);\n        });\n        \n        this.pusherService.pusher.bind('error', (Data) =>{\n          console.log('Data pusher', Data);\n        });*/\n        \n      \n      });\n\n\n      this.dummyMarker = document.getElementById('DummyMarker');\n  }\n  async closeModal() {\n    this.modalController.dismiss();\n  }\n\n  async showLoading() {\n    const loading = await this.loadingCtrl.create({\n      message: this._translate.instant('general.loading')\n    });\n    await loading.present();\n  }\n\n  async hideLoading() {\n    this.loadingCtrl.dismiss();\n  }\n/*\n  map\n  loadMap() {\n    \n    this.map = GoogleMaps.create(this.mapCanvas.nativeElement, {\n      camera: {\n        target: {\n          lat: 31.032260599999997,\n          lng: 31.36069329999998\n        },\n        zoom: 5\n      }\n    });\n  }\n\n  fetchDate() {\n    this.map.clear();\n    this.map.animateCamera({\n      target: {\n        lat: 5,\n        lng: 7,\n      },\n      zoom: 17,\n      tilt: 30\n    });\n  }*/\n}\n\n\n\n/*\n\nprepaid \n\n\n$amount = tax + insurance + custom value + curiour fee\n\nif (return_package_fee == 2) //sender\n$amount = $amount + return_courier_fee\n\n\n\n\nwhen shipment was received the receiver should pay\n\n$amount = package_fee\n\nif (return_package_fee == 1)\n$amount = $amount + return_courier_fee\n\n\n\n*/\n\n\n\n/*\n\n\n\npostpaid \n\n\n\n// reciever\n$amount = tax + insurance + custom value + curiour fee \n\nif(return_defray = 1)\n  $amount = amount +  package_fee\n\n\n\nif (return_package_fee == 1)\n  $amount =amount + return_courier_fee   + package_fee\n\n\n\n\nwhen returned value was received the sender should pay\n\n\n\n&\n\n\n// sender\n\nif (return_package_fee == 2)\n\n\n$amount = return_courier_fee\n\n*/"],"sourceRoot":"webpack:///","file":"default~home-home-module~new-order-new-order-module~notifications-notifications-module-es5.js"}