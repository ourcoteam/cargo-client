{"version":3,"sources":["./node_modules/ngx-paypal/fesm2015/ngx-paypal.js","./src/app/shared/new-address/new-address.component.html","./src/app/shared/new-receiver/new-receiver.component.html","./src/app/shared/payment-card/payment-card.component.html","./src/app/shared/shipment-details/shipment-details.component.html","./src/app/services/ui/loading.service.ts","./src/app/shared/new-address/new-address.component.scss","./src/app/shared/new-address/new-address.component.ts","./src/app/shared/new-receiver/new-receiver.component.scss","./src/app/shared/new-receiver/new-receiver.component.ts","./src/app/shared/payment-card/payment-card.component.scss","./src/app/shared/payment-card/payment-card.component.ts","./src/app/shared/shared.module.ts","./src/app/shared/shipment-details/shipment-details.component.scss","./src/app/shared/shipment-details/shipment-details.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC6G;AAC7H;;AAE/B;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,mDAAmD,EAAE;AACrD;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,yCAAyC,EAAE;AAC3C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA;AACA,SAAS,OAAO,oDAAM;AACtB;AACA;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mDAAmD,4BAA4B;AAC/E;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,wBAAwB;AACnD,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB,GAAG,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B,iFAAiF;AACjF,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,4CAA4C;AAC5C;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB,GAAG,kEAAkE,cAAc,mCAAmC,qBAAqB,iCAAiC,mBAAmB;AACpN,yDAAyD,6BAA6B;AACtF,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS,4BAA4B;AACrC,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,OAAO,oDAAM;AACtB;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,iCAAiC,OAAO,uDAAS,mCAAmC,gBAAgB,IAAI;AACxG;AACA;AACA,CAAC;AACD,WAAW,EA2DV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAsFV;AACD;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAWV;AACD;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAiBV;AACD;AACA;AACA;AACA,yCAAyC;AACzC,WAAW,EAGV;AACD;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAOV;AACD;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAKV;AACD;AACA;AACA;AACA,kCAAkC;AAClC,WAAW,EAOV;AACD;AACA;AACA;AACA,qCAAqC;AACrC,WAAW,EAOV;AACD;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAKV;AACD;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAOV;AACD;AACA;AACA;AACA,wCAAwC;AACxC,WAAW,EAGV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAGV;AACD;AACA;AACA;AACA,sCAAsC;AACtC,WAAW,EAOV;AACD;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAKV;AACD;AACA;AACA;AACA,+CAA+C;AAC/C,WAAW,EAGV;AACD;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,oCAAoC;AACpC,WAAW,EAKV;AACD;AACA;AACA;AACA,+BAA+B;AAC/B,WAAW,EAeV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EASV;AACD;AACA;AACA;AACA,uCAAuC;AACvC,WAAW,EAKV;AACD;AACA;AACA;AACA,mBAAmB;AACnB,WAAW,EAaV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAiBV;AACD;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAKV;AACD;AACA;AACA;AACA,mBAAmB;AACnB,WAAW,EAKV;AACD;AACA;AACA;AACA,qBAAqB;AACrB,WAAW,EAKV;AACD;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAGV;AACD;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAqBV;AACD;AACA;AACA;AACA,mBAAmB;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","file":"default~home-home-module~new-order-new-order-module~notifications-notifications-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Injectable, NgZone, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet ScriptService = /** @class */ (() => {\r\n    class ScriptService {\r\n        /**\r\n         * @param {?} zone\r\n         */\r\n        constructor(zone) {\r\n            this.zone = zone;\r\n        }\r\n        /**\r\n         * @param {?} url\r\n         * @param {?} globalVar\r\n         * @param {?} onReady\r\n         * @return {?}\r\n         */\r\n        registerScript(url, globalVar, onReady) {\r\n            /** @type {?} */\r\n            const existingGlobalVar = ((/** @type {?} */ (window)))[globalVar];\r\n            if (existingGlobalVar) {\r\n                // global variable is present = script was already loaded\r\n                this.zone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    onReady(existingGlobalVar);\r\n                }));\r\n                return;\r\n            }\r\n            // prepare script elem\r\n            /** @type {?} */\r\n            const scriptElem = document.createElement('script');\r\n            scriptElem.id = this.getElemId(globalVar);\r\n            scriptElem.innerHTML = '';\r\n            scriptElem.onload = (/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.zone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    onReady(((/** @type {?} */ (window)))[globalVar]);\r\n                }));\r\n            });\r\n            scriptElem.src = url;\r\n            scriptElem.async = true;\r\n            scriptElem.defer = true;\r\n            // add script to header\r\n            document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n        }\r\n        /**\r\n         * @param {?} globalVar\r\n         * @return {?}\r\n         */\r\n        cleanup(globalVar) {\r\n            // remove script from DOM\r\n            /** @type {?} */\r\n            const scriptElem = document.getElementById(this.getElemId(globalVar));\r\n            if (scriptElem) {\r\n                scriptElem.remove();\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} globalVar\r\n         * @return {?}\r\n         */\r\n        getElemId(globalVar) {\r\n            return `ngx-paypal-script-elem-${globalVar}`;\r\n        }\r\n    }\r\n    ScriptService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ScriptService.ctorParameters = () => [\r\n        { type: NgZone }\r\n    ];\r\n    return ScriptService;\r\n})();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    ScriptService.prototype.zone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/paypal-script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet PayPalScriptService = /** @class */ (() => {\r\n    class PayPalScriptService {\r\n        /**\r\n         * @param {?} scriptService\r\n         */\r\n        constructor(scriptService) {\r\n            this.scriptService = scriptService;\r\n            this.paypalWindowName = 'paypal';\r\n        }\r\n        /**\r\n         * @param {?} config\r\n         * @param {?} onReady\r\n         * @return {?}\r\n         */\r\n        registerPayPalScript(config, onReady) {\r\n            this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        destroyPayPalScript() {\r\n            this.scriptService.cleanup(this.paypalWindowName);\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @return {?}\r\n         */\r\n        getUrlForConfig(config) {\r\n            /** @type {?} */\r\n            const params = [\r\n                {\r\n                    name: 'client-id',\r\n                    value: config.clientId\r\n                }\r\n            ];\r\n            if (config.currency) {\r\n                params.push({\r\n                    name: 'currency',\r\n                    value: config.currency\r\n                });\r\n            }\r\n            if (config.commit) {\r\n                params.push({\r\n                    name: 'commit',\r\n                    value: config.commit\r\n                });\r\n            }\r\n            if (config.vault) {\r\n                params.push({\r\n                    name: 'vault',\r\n                    value: config.vault\r\n                });\r\n            }\r\n            if (config.extraParams) {\r\n                params.push(...config.extraParams);\r\n            }\r\n            return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} queryParams\r\n         * @return {?}\r\n         */\r\n        getQueryString(queryParams) {\r\n            /** @type {?} */\r\n            let queryString = '';\r\n            for (let i = 0; i < queryParams.length; i++) {\r\n                /** @type {?} */\r\n                const queryParam = queryParams[i];\r\n                if (i === 0) {\r\n                    queryString += '?';\r\n                }\r\n                else {\r\n                    queryString += '&';\r\n                }\r\n                queryString += `${queryParam.name}=${queryParam.value}`;\r\n            }\r\n            return queryString;\r\n        }\r\n    }\r\n    PayPalScriptService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    PayPalScriptService.ctorParameters = () => [\r\n        { type: ScriptService }\r\n    ];\r\n    return PayPalScriptService;\r\n})();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PayPalScriptService.prototype.paypalWindowName;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    PayPalScriptService.prototype.scriptService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/paypal.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet NgxPaypalComponent = /** @class */ (() => {\r\n    class NgxPaypalComponent {\r\n        /**\r\n         * @param {?} paypalScriptService\r\n         * @param {?} cdr\r\n         * @param {?} ngZone\r\n         */\r\n        constructor(paypalScriptService, cdr, ngZone) {\r\n            this.paypalScriptService = paypalScriptService;\r\n            this.cdr = cdr;\r\n            this.ngZone = ngZone;\r\n            /**\r\n             * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n             * sharing base configuration. In such a case only a single component may register script.\r\n             */\r\n            this.registerScript = true;\r\n            /**\r\n             * Emitted when paypal script is loaded\r\n             */\r\n            this.scriptLoaded = new EventEmitter();\r\n            this.ngUnsubscribe = new Subject();\r\n            /**\r\n             * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n             */\r\n            this.initializePayPal = true;\r\n        }\r\n        /**\r\n         * @param {?} content\r\n         * @return {?}\r\n         */\r\n        set payPalButtonContainer(content) {\r\n            this.payPalButtonContainerElem = content;\r\n        }\r\n        /**\r\n         * @param {?} changes\r\n         * @return {?}\r\n         */\r\n        ngOnChanges(changes) {\r\n            if (!this.payPalButtonContainerId) {\r\n                this.payPalButtonContainerId = this.generateElementId();\r\n            }\r\n            // first time config setup\r\n            /** @type {?} */\r\n            const config = this.config;\r\n            if (changes.config.isFirstChange()) {\r\n                if (config && this.registerScript) {\r\n                    this.initPayPalScript(config, (/**\r\n                     * @param {?} payPal\r\n                     * @return {?}\r\n                     */\r\n                    (payPal) => {\r\n                        // store reference to paypal global script\r\n                        this.payPal = payPal;\r\n                        this.doPayPalCheck();\r\n                    }));\r\n                }\r\n            }\r\n            // changes to config\r\n            if (!changes.config.isFirstChange()) {\r\n                this.reinitialize(config);\r\n            }\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ngOnDestroy() {\r\n            this.paypalScriptService.destroyPayPalScript();\r\n            this.ngUnsubscribe.next();\r\n            this.ngUnsubscribe.complete();\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ngAfterViewInit() {\r\n            this.doPayPalCheck();\r\n        }\r\n        /**\r\n         * @param {?} payPal\r\n         * @return {?}\r\n         */\r\n        customInit(payPal) {\r\n            this.payPal = payPal;\r\n            this.doPayPalCheck();\r\n        }\r\n        /**\r\n         * @param {?} config\r\n         * @return {?}\r\n         */\r\n        reinitialize(config) {\r\n            this.config = config;\r\n            this.payPal = undefined;\r\n            this.paypalScriptService.destroyPayPalScript();\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n            this.initializePayPal = true;\r\n            if (this.payPalButtonContainerElem) {\r\n                while (this.payPalButtonContainerElem.nativeElement.firstChild) {\r\n                    this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n            if (this.config) {\r\n                if (!this.payPal) {\r\n                    this.initPayPalScript(this.config, (/**\r\n                     * @param {?} payPal\r\n                     * @return {?}\r\n                     */\r\n                    (payPal) => {\r\n                        // store reference to paypal global script\r\n                        this.payPal = payPal;\r\n                        this.doPayPalCheck();\r\n                    }));\r\n                }\r\n                else {\r\n                    this.doPayPalCheck();\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        doPayPalCheck() {\r\n            if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n                // make sure that id is also set\r\n                if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                    this.initializePayPal = false;\r\n                    this.initPayPal(this.config, this.payPal);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @param {?} initPayPal\r\n         * @return {?}\r\n         */\r\n        initPayPalScript(config, initPayPal) {\r\n            this.paypalScriptService.registerPayPalScript({\r\n                clientId: config.clientId,\r\n                commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n                currency: config.currency,\r\n                vault: config.vault,\r\n                extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n            }, (/**\r\n             * @param {?} paypal\r\n             * @return {?}\r\n             */\r\n            (paypal) => {\r\n                this.scriptLoaded.next(paypal);\r\n                initPayPal(paypal);\r\n            }));\r\n        }\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        generateElementId() {\r\n            return `ngx-captcha-id-${new Date().valueOf()}`;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @param {?} paypal\r\n         * @return {?}\r\n         */\r\n        initPayPal(config, paypal) {\r\n            // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\r\n            this.ngZone.runOutsideAngular((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n                /** @type {?} */\r\n                const createOrder = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                            throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\r\n                    Please choose one or the other.`);\r\n                        }\r\n                        if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                            throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\r\n                    Please define one of these to create order.`);\r\n                        }\r\n                        if (config.createOrderOnClient) {\r\n                            return actions.order.create(config.createOrderOnClient(data));\r\n                        }\r\n                        if (config.createOrderOnServer) {\r\n                            return config.createOrderOnServer(data);\r\n                        }\r\n                        throw Error(`Invalid state for 'createOrder'.`);\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const createSubscription = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.createSubscription) {\r\n                            return config.createSubscription(data, actions);\r\n                        }\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const onShippingChange = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.onShippingChange) {\r\n                            return config.onShippingChange(data, actions);\r\n                        }\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const buttonsConfig = Object.assign(Object.assign(Object.assign({ style: config.style, onApprove: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        return this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onApprove) {\r\n                                config.onApprove(data, actions);\r\n                            }\r\n                            // capture on server\r\n                            if (config.authorizeOnServer) {\r\n                                return config.authorizeOnServer(data, actions);\r\n                            }\r\n                            // capture on client\r\n                            /** @type {?} */\r\n                            const onClientAuthorization = config.onClientAuthorization;\r\n                            if (onClientAuthorization) {\r\n                                actions.order.capture().then((/**\r\n                                 * @param {?} details\r\n                                 * @return {?}\r\n                                 */\r\n                                (details) => {\r\n                                    this.ngZone.run((/**\r\n                                     * @return {?}\r\n                                     */\r\n                                    () => {\r\n                                        onClientAuthorization(details);\r\n                                    }));\r\n                                }));\r\n                                return;\r\n                            }\r\n                        }));\r\n                    }), onError: (/**\r\n                     * @param {?} error\r\n                     * @return {?}\r\n                     */\r\n                    (error) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onError) {\r\n                                config.onError(error);\r\n                            }\r\n                        }));\r\n                    }), onCancel: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onCancel) {\r\n                                config.onCancel(data, actions);\r\n                            }\r\n                        }));\r\n                    }), onClick: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onClick) {\r\n                                config.onClick(data, actions);\r\n                            }\r\n                        }));\r\n                    }), onInit: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onInit) {\r\n                                config.onInit(data, actions);\r\n                            }\r\n                        }));\r\n                    }) }, ((config.createOrderOnClient || config.createOrderOnServer) && { createOrder })), (config.createSubscription && { createSubscription })), (config.onShippingChange && { onShippingChange }));\r\n                paypal.Buttons(buttonsConfig).render(`#${this.payPalButtonContainerId}`);\r\n            }));\r\n        }\r\n    }\r\n    NgxPaypalComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    selector: 'ngx-paypal',\r\n                    template: `\r\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\r\n    `\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    NgxPaypalComponent.ctorParameters = () => [\r\n        { type: PayPalScriptService },\r\n        { type: ChangeDetectorRef },\r\n        { type: NgZone }\r\n    ];\r\n    NgxPaypalComponent.propDecorators = {\r\n        config: [{ type: Input }],\r\n        registerScript: [{ type: Input }],\r\n        scriptLoaded: [{ type: Output }],\r\n        payPalButtonContainer: [{ type: ViewChild, args: ['payPalButtonContainer', { static: false },] }]\r\n    };\r\n    return NgxPaypalComponent;\r\n})();\r\nif (false) {\r\n    /**\r\n     * Configuration for paypal.\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.config;\r\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.registerScript;\r\n    /**\r\n     * Emitted when paypal script is loaded\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.scriptLoaded;\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.payPalButtonContainerId;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.ngUnsubscribe;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.payPalButtonContainerElem;\r\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.initializePayPal;\r\n    /**\r\n     * Reference to PayPal global API\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.payPal;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.paypalScriptService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.cdr;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.ngZone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-paypal.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet NgxPayPalModule = /** @class */ (() => {\r\n    class NgxPayPalModule {\r\n    }\r\n    NgxPayPalModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        NgxPaypalComponent,\r\n                    ],\r\n                    exports: [\r\n                        NgxPaypalComponent,\r\n                    ],\r\n                    providers: [\r\n                        ScriptService,\r\n                        PayPalScriptService\r\n                    ]\r\n                },] }\r\n    ];\r\n    return NgxPayPalModule;\r\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/paypal-models.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalConfig() { }\r\nif (false) {\r\n    /**\r\n     * Currency - Defaults to USD if not provided\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.currency;\r\n    /**\r\n     * Use when creating order on client\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createOrderOnClient;\r\n    /**\r\n     * Use for creating orders on server. PayPal expects you to return 'orderId' in this method\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createOrderOnServer;\r\n    /**\r\n     * Advanced configuration\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.advanced;\r\n    /**\r\n     * Client id\r\n     * @type {?}\r\n     */\r\n    IPayPalConfig.prototype.clientId;\r\n    /**\r\n     * Shipping callback\r\n     * see https://developer.paypal.com/docs/checkout/integration-features/shipping-callback/\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onShippingChange;\r\n    /**\r\n     * Called when 'onApprove' event occurs\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onApprove;\r\n    /**\r\n     * Called when authorization on client succeeds\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onClientAuthorization;\r\n    /**\r\n     * Implement for authorizing on server side\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.authorizeOnServer;\r\n    /**\r\n     * Button style configuration\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.style;\r\n    /**\r\n     * Error handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onError;\r\n    /**\r\n     * Click handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onClick;\r\n    /**\r\n     * Cancel handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onCancel;\r\n    /**\r\n     * Init handler.\r\n     * can be used for validation, see: https://developer.paypal.com/docs/checkout/integration-features/validation/#\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onInit;\r\n    /**\r\n     * Create subscription handler\r\n     * https://developer.paypal.com/docs/subscriptions/integrate/\r\n     *\r\n     * Note: the vault property in the advanced configuration also has to be set to true\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createSubscription;\r\n    /**\r\n     * Vault - must be set to true when creating subscriptions\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.vault;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalUrlConfig() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPayPalUrlConfig.prototype.clientId;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.currency;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.commit;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.vault;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.extraParams;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOrderDetails() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.create_time;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.update_time;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.id;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.intent;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.payer;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.status;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.links;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.purchase_units;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IClientAuthorizeCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IClientAuthorizeCallbackData.prototype.links;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ILinkDescription() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ILinkDescription.prototype.href;\r\n    /** @type {?} */\r\n    ILinkDescription.prototype.rel;\r\n    /** @type {?|undefined} */\r\n    ILinkDescription.prototype.method;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IQueryParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IQueryParam.prototype.name;\r\n    /** @type {?} */\r\n    IQueryParam.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnShippingChangeData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnShippingChangeData.prototype.paymentToken;\r\n    /** @type {?} */\r\n    IOnShippingChangeData.prototype.shipping_address;\r\n    /** @type {?|undefined} */\r\n    IOnShippingChangeData.prototype.selected_shipping_method;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnShippingChangeActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.resolve;\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.reject;\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.patch;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IAdvancedConfiguration() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IAdvancedConfiguration.prototype.commit;\r\n    /** @type {?|undefined} */\r\n    IAdvancedConfiguration.prototype.extraQueryParams;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnApproveCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.orderID;\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.payerID;\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.subscriptionID;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateOrderCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateOrderCallbackActions.prototype.order;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICancelCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICancelCallbackData.prototype.orderID;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnApproveCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.redirect;\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.restart;\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.order;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnInitCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnInitCallbackActions.prototype.enable;\r\n    /** @type {?} */\r\n    IOnInitCallbackActions.prototype.disable;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateSubscriptionCallbackActions.prototype.subscription;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IInitCallbackData() { }\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionCallbackData() { }\r\n/**\r\n * @record\r\n */\r\nfunction IOnClickCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnClickCallbackActions.prototype.resolve;\r\n    /** @type {?} */\r\n    IOnClickCallbackActions.prototype.reject;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalButtonStyle() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.label;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.size;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.shape;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.color;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.layout;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.tagline;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.height;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateOrderRequest() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateOrderRequest.prototype.intent;\r\n    /** @type {?} */\r\n    ICreateOrderRequest.prototype.purchase_units;\r\n    /** @type {?|undefined} */\r\n    ICreateOrderRequest.prototype.payer;\r\n    /** @type {?|undefined} */\r\n    ICreateOrderRequest.prototype.application_context;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionRequest() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateSubscriptionRequest.prototype.plan_id;\r\n    /** @type {?|undefined} */\r\n    ICreateSubscriptionRequest.prototype.quantity;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayer() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.name;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.email_address;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.payer_id;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.birth_date;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.tax_info;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.address;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IApplicationContext() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.brand_name;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.locale;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.landing_page;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.shipping_preference;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.user_action;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.payment_method;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.return_url;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.cancel_url;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPaymentMethod() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPaymentMethod.prototype.payer_selected;\r\n    /** @type {?|undefined} */\r\n    IPaymentMethod.prototype.payee_preferred;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPhone() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPhone.prototype.phone_type;\r\n    /** @type {?|undefined} */\r\n    IPhone.prototype.phone_number;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITaxInfo() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITaxInfo.prototype.tax_id;\r\n    /** @type {?} */\r\n    ITaxInfo.prototype.tax_id_type;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPhoneNumber() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPhoneNumber.prototype.national_number;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPurchaseUnit() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPurchaseUnit.prototype.amount;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.reference_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.payee;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.payment_instruction;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.description;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.custom_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.invoice_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.soft_descriptor;\r\n    /** @type {?} */\r\n    IPurchaseUnit.prototype.items;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.shipping;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayee() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayee.prototype.email_address;\r\n    /** @type {?|undefined} */\r\n    IPayee.prototype.merchant_id;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPaymentInstructions() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPaymentInstructions.prototype.platform_fees;\r\n    /** @type {?|undefined} */\r\n    IPaymentInstructions.prototype.disbursement_mode;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPlatformFee() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPlatformFee.prototype.amount;\r\n    /** @type {?|undefined} */\r\n    IPlatformFee.prototype.payee;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITransactionItem() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.name;\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.unit_amount;\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.quantity;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.description;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.sku;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.category;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.tax;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITax() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITax.prototype.currency_code;\r\n    /** @type {?} */\r\n    ITax.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IUnitAmount() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IUnitAmount.prototype.currency_code;\r\n    /** @type {?} */\r\n    IUnitAmount.prototype.value;\r\n    /** @type {?|undefined} */\r\n    IUnitAmount.prototype.breakdown;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IMoney() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IMoney.prototype.currency_code;\r\n    /** @type {?} */\r\n    IMoney.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IUnitBreakdown() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.item_total;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.shipping;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.handling;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.tax_total;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.insurance;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.shipping_discount;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.discount;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPartyName() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.prefix;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.given_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.surname;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.middle_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.suffix;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.alternate_full_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.full_name;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IAddressPortable() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IAddressPortable.prototype.country_code;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.address_line_1;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.address_line_2;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.admin_area_2;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.admin_area_1;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.postal_code;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IShipping() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IShipping.prototype.name;\r\n    /** @type {?|undefined} */\r\n    IShipping.prototype.address;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-paypal.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxPayPalModule, NgxPaypalComponent, PayPalScriptService, ScriptService as ɵa };\n//# sourceMappingURL=ngx-paypal.js.map\n","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>\\n            {{ _translate.instant('new_address.add_new_address') }}\\n        </ion-title>\\n        <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\" slot=\\\"end\\\">\\n            <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n    <div class=\\\"white\\\">\\n        <div class=\\\"form-holder register-form\\\">\\n            <form [formGroup]=\\\"addressInfoForm\\\">\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.address_name') }}\\n                        <ion-text> * </ion-text>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"address_name\\\" type=\\\"text\\\"> </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.country') }}\\n                        <ion-text> * </ion-text>\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"country_id\\\" placeholder=\\\"Select Country\\\" interface=\\\"action-sheet\\\" (ionChange)=\\\"getRegions()\\\" [disabled]=\\\"!countries\\\">\\n                        <ion-select-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.id\\\">{{ country.name }}</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.state_region') }}\\n                        <ion-text> * </ion-text>\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"state_id\\\" placeholder=\\\"Select State/Region\\\" interface=\\\"action-sheet\\\" (ionChange)=\\\"getCities()\\\" [disabled]=\\\"!regions\\\">\\n                        <ion-select-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region.id\\\">{{ region.name }}</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.city') }}\\n                        <ion-text> * </ion-text>\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"city_id\\\" placeholder=\\\"Select City\\\" interface=\\\"action-sheet\\\" (ionChange)=\\\"getAreas()\\\" [disabled]=\\\"!cities\\\">\\n                        <ion-select-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.id\\\">{{ city.name }}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.area') }}\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"area_id\\\" placeholder=\\\"Select Area\\\" interface=\\\"action-sheet\\\" [disabled]=\\\"!areas\\\">\\n                        <ion-select-option *ngFor=\\\"let area of areas\\\" [value]=\\\"area.id\\\">{{ area.name }}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                        {{ _translate.instant('general.postal_code') }}\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"postal_code\\\" type=\\\"num\\\"> </ion-input>\\n                </ion-item>\\n            </form>\\n        </div>\\n        <div id=\\\"map_canvas\\\" #map_canvas>\\n            <ion-button color=\\\"dark\\\" (click)=\\\"getCurrentLocation()\\\" class=\\\"map-btn\\\">\\n                <ion-icon name=\\\"locate\\\" slot=\\\"start\\\"></ion-icon>\\n                {{ _translate.instant('general.my_current_location') }}\\n            </ion-button>\\n            <!-- <ion-button ion-button (click)=\\\"onButtonClick()\\\">Demo</ion-button> -->\\n            <ion-img src=\\\"/assets/img/marker.svg\\\" [ngClass]=\\\"mapDragging ? 'map-marker dragging' : 'map-marker'\\\" id=\\\"DummyMarker\\\"></ion-img>\\n        </div>\\n    </div>\\n</ion-content>\\n<ion-footer class=\\\"has-action\\\">\\n    <ion-button class=\\\"btn-full btn-gradient\\\" expand=\\\"block\\\" round strong [disabled]=\\\"!addressInfoForm.valid || !(lat && lng)\\\" (click)=\\\"addNewAddress()\\\">\\n        {{ _translate.instant('new_address.add_new_address') }}\\n    </ion-button>\\n</ion-footer>\"","export default \"<ion-header class=\\\"bg-header\\\">\\n    <ion-toolbar>\\n        <ion-title>{{ _translate.instant('new_receiver.new_receiver') }}</ion-title>\\n        <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\" slot=\\\"end\\\" color=\\\"light\\\">\\n            <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n    <div class=\\\"form-holder register-form\\\">\\n        <form [formGroup]=\\\"userForm\\\">\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                    {{ _translate.instant('general.name') }}\\n                    <ion-text> * </ion-text>\\n                </ion-label>\\n                <ion-input formControlName=\\\"name\\\" type=\\\"text\\\"> </ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">\\n                    {{ _translate.instant('general.mobile') }}\\n                    <ion-text> * </ion-text>\\n                </ion-label>\\n                <ion-input formControlName=\\\"mobile\\\" type=\\\"tel\\\"> </ion-input>\\n            </ion-item>\\n        </form>\\n    </div>\\n</ion-content>\\n<ion-footer class=\\\"has-action\\\">\\n    <ion-button class=\\\"btn-full btn-gradient\\\" expand=\\\"block\\\" round strong [disabled]=\\\"!userForm.valid\\\" (click)=\\\"addUser()\\\">\\n        {{ _translate.instant('new_receiver.add_new_receiver') }}\\n    </ion-button>\\n</ion-footer>\"","export default \"<ion-header class=\\\"bg-header\\\">\\n  <ion-toolbar>\\n      <ion-title>{{ _translate.instant('general.shipment_payment_details') }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-row>\\n    <ion-col size=\\\"6\\\" *ngFor=\\\"let payment of view\\\">\\n      <ion-label color=\\\"medium\\\">{{ _translate.instant(payment.name) }} </ion-label>\\n      <p>{{ payment.amount }} {{shipment.currency_id.currency_symbol}}</p>\\n    </ion-col>\\n  </ion-row>\\n  <br>\\n  <br>\\n  <ion-row>\\n    <ion-col size=\\\"6\\\">\\n      <ion-label color=\\\"medium\\\">{{ _translate.instant('general.total_amount') }} </ion-label>\\n      <p>{{ totalAmount }} {{shipment.currency_id.currency_symbol}}</p>\\n    </ion-col>\\n    <!-- <ion-col size=\\\"6\\\">\\n      <ion-button (click)=\\\"doPay()\\\">{{ _translate.instant('general.pay') }}</ion-button>\\n    </ion-col> -->\\n  </ion-row>\\n  <ngx-paypal [config]=\\\"payPalConfig\\\"></ngx-paypal>\\n\\n</ion-content>\\n\\n\\n\"","export default \"<ion-header class=\\\"bg-header\\\">\\n    <ion-toolbar>\\n        <ion-title>{{ _translate.instant('general.shipment_details') }}</ion-title>\\n        <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\" slot=\\\"end\\\" color=\\\"light\\\">\\n            <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n    <div class=\\\"data-grid\\\">\\n        <h4>{{ _translate.instant('general.shipment_info') }}</h4>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.shipment_number') }}\\n                </ion-label>\\n                <p>{{ shData?.number }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.shipment_type') }}\\n                </ion-label>\\n                <p [innerHtml]=\\\"\\n            shData?.type == 1\\n              ? _translate.instant('general.send')\\n              : _translate.instant('general.receive')\\n          \\\"></p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.package_type') }}\\n                </ion-label>\\n                <p>{{ shData?.packaging.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.status') }}\\n                </ion-label>\\n                <p>{{ shData?.status }}</p>\\n            </ion-col>\\n            <!-- <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">Payment Type</ion-label>\\n                <p [innerHTML]=\\\"shData?.payment_type == 1 ? 'Postpaid' : 'Prepaid'\\\"></p>\\n            </ion-col> -->\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.currency') }}\\n                </ion-label>\\n                <p>{{ shData?.currency_id.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.office') }}\\n                </ion-label>\\n                <p>{{ shData?.office.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.delivery_date') }}\\n                </ion-label>\\n                <p>{{ shData?.delivery_date }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.delivery_time') }}\\n                </ion-label>\\n                <p>{{ shData?.delivery_time }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.created_at') }}\\n                </ion-label>\\n                <p>{{ shData?.created_at }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.updated_at') }}\\n                </ion-label>\\n                <p>{{ shData?.updated_at }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n\\n    <div class=\\\"data-grid\\\">\\n        <h4>{{ _translate.instant('general.shipment_details') }}</h4>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.payment_type') }}\\n                </ion-label>\\n                <p [innerHtml]=\\\"\\n            shData?.payment_type == 1\\n              ?_translate.instant('general.postpaid')\\n              : _translate.instant('general.prepaid')\\n          \\\"></p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.currency') }}\\n                </ion-label>\\n                <p>{{ shData?.currency_id.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.courier\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.courier') }}\\n                </ion-label>\\n                <p>{{ shData?.courier }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.courier_fees') }}\\n                </ion-label>\\n                <p>{{ shData?.courier_fee }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.customs_value') }}\\n                </ion-label>\\n                <p>{{ shData?.customs_value }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.package_fee\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.package_fees') }}\\n                </ion-label>\\n                <p>{{ shData?.package_fee }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.return_courier_fee\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.return_courier_fees') }}\\n                </ion-label>\\n                <p>{{ shData?.return_courier_fee }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.return_defray\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.return_defray') }}\\n                </ion-label>\\n                <p>{{ shData?.return_defray }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.return_package_fee\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.return_package_fee') }}\\n                </ion-label>\\n                <p>{{ shData?.return_package_fee }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.tax != 0\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.tax') }}\\n                </ion-label>\\n                <p>{{ shData?.tax }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"shData?.mode && shData?.mode != 0\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.mode') }}\\n                </ion-label>\\n                <p>{{ shData?.mode }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n\\n    <div class=\\\"data-grid\\\">\\n        <h4>{{ _translate.instant('general.sender_details') }}</h4>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.name') }}\\n                </ion-label>\\n                <p>{{ shData?.sender.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.mobile') }}\\n                </ion-label>\\n                <p>{{ shData?.sender.mobile }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.sender_address') }}\\n                </ion-label>\\n                <p>{{ shData?.sender_address.address }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n    <div class=\\\"data-grid\\\" *ngIf=\\\"shData?.receiver\\\">\\n        <h4>{{ _translate.instant('general.receiver_details') }}</h4>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.name') }}\\n                </ion-label>\\n                <p *ngIf=\\\"shData && shData.Received_By\\\">{{ shData.Received_By }}</p>\\n                <p *ngIf=\\\"shData && !shData.Received_By\\\">{{ shData.receiver.name }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.mobile') }}\\n                </ion-label>\\n                <p>{{ shData?.receiver.mobile }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.receiver_address') }}\\n                </ion-label>\\n                <p>{{ shData?.receiver_address.address }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n    <div class=\\\"data-grid\\\" *ngIf=\\\"shData?.notes\\\">\\n        <h4>\\n            {{ _translate.instant('general.notes') }} ({{ shData?.notes.length }})\\n        </h4>\\n        <ion-row *ngFor=\\\"let note of shData?.notes\\\">\\n            <ion-col size=\\\"12\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.by') }} {{ note.user }} - {{ note.date.date | date: 'short' }}\\n                </ion-label>\\n                <p>{{ note.note }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n\\n    <div class=\\\"data-grid\\\" *ngIf=\\\"shData?.history\\\">\\n        <h4>\\n            {{ _translate.instant('general.history') }} ({{ shData?.history.length }})\\n        </h4>\\n        <ion-row *ngFor=\\\"let note of shData?.history\\\">\\n            <ion-col size=\\\"12\\\">\\n                <ion-label color=\\\"medium\\\">{{ _translate.instant('general.by') }} {{ note.user }} - {{ note.date.date | date: 'short' }}\\n                </ion-label>\\n                <p>{{ note.note }}</p>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n\\n\\n    <!-- <div id=\\\"map_canvas\\\" #map_canvas>\\n        <ion-img src=\\\"/assets/img/marker.svg\\\" id=\\\"DummyMarker\\\"></ion-img>\\n    </div> -->\\n\\n</ion-content>\\n<ion-footer *ngIf=\\\"amount && amount != 0\\\">\\n    <ion-button (click)=\\\"payForShipment()\\\">\\n        <ion-icon name=\\\"receipt\\\"></ion-icon>\\n        <ion-label>{{_translate.instant('general.payForShipment')  }}</ion-label>\\n    </ion-button>\\n</ion-footer>\"","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  constructor(public loadingController: LoadingController) {}\n\n  async simpleLoading() {\n    const loading = await this.loadingController.create({\n      translucent: true\n    });\n    await loading.present();\n  }\n\n  async loadingDismiss() {\n    this.loadingController.dismiss();\n  }\n}\n","export default \"#map_canvas {\\n  width: 100%;\\n  height: 20vh;\\n  border-radius: 15px;\\n  z-index: 999999;\\n}\\n#map_canvas ion-img.map-marker {\\n  max-width: 60px;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%) scale(1);\\n  opacity: 1;\\n  transition: all 0.2s;\\n}\\n#map_canvas ion-img.map-marker.dragging {\\n  transform: translate(-50%, -50%) scale(1.1);\\n  opacity: 0.5;\\n}\\n#map_canvas ion-button.map-btn {\\n  position: absolute;\\n  z-index: 2;\\n  border-radius: 15px;\\n  --border-radius: 15px;\\n}\\nion-backdrop {\\n  display: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zcG90bGF5ZXIvRG93bmxvYWRzL2NhcmdvLWN1c3RvbWVyL3NyYy9hcHAvc2hhcmVkL25ldy1hZGRyZXNzL25ldy1hZGRyZXNzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvbmV3LWFkZHJlc3MvbmV3LWFkZHJlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtBQ0NKO0FEQUk7RUFDSSxlQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSx5Q0FBQTtFQUNBLFVBQUE7RUFDQSxvQkFBQTtBQ0VSO0FERFE7RUFDSSwyQ0FBQTtFQUNBLFlBQUE7QUNHWjtBREFJO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtBQ0VSO0FERUE7RUFDSSx3QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL25ldy1hZGRyZXNzL25ldy1hZGRyZXNzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21hcF9jYW52YXMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMjB2aDtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIHotaW5kZXg6IDk5OTk5OTtcbiAgICBpb24taW1nLm1hcC1tYXJrZXIge1xuICAgICAgICBtYXgtd2lkdGg6IDYwcHg7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEpO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgJi5kcmFnZ2luZyB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxLjEpO1xuICAgICAgICAgICAgb3BhY2l0eTogMC41O1xuICAgICAgICB9XG4gICAgfVxuICAgIGlvbi1idXR0b24ubWFwLWJ0biB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgICAgLS1ib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIH1cbn1cblxuaW9uLWJhY2tkcm9wIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59IiwiI21hcF9jYW52YXMge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyMHZoO1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICB6LWluZGV4OiA5OTk5OTk7XG59XG4jbWFwX2NhbnZhcyBpb24taW1nLm1hcC1tYXJrZXIge1xuICBtYXgtd2lkdGg6IDYwcHg7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEpO1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbn1cbiNtYXBfY2FudmFzIGlvbi1pbWcubWFwLW1hcmtlci5kcmFnZ2luZyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEuMSk7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbiNtYXBfY2FudmFzIGlvbi1idXR0b24ubWFwLWJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMjtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgLS1ib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuXG5pb24tYmFja2Ryb3Age1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport {\n  ModalController,\n  Platform,\n  LoadingController,\n  ToastController,\n  NavController,\n  NavParams\n} from '@ionic/angular';\nimport {\n  GoogleMaps,\n  GoogleMap,\n  GoogleMapsEvent,\n  Marker,\n  GoogleMapsAnimation,\n  MyLocation,\n  Environment,\n  Geocoder,\n  BaseArrayClass,\n  GeocoderResult\n} from '@ionic-native/google-maps';\nimport { ApiService } from '../../services/api.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { IonInput } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-address',\n  templateUrl: './new-address.component.html',\n  styleUrls: ['./new-address.component.scss']\n})\nexport class NewAddressComponent implements OnInit, OnDestroy {\n  @ViewChild('map_canvas', { static: false }) mapCanvas: ElementRef;\n  map: GoogleMap;\n  loading: any;\n\n  dummyMarker: any;\n\n  mapDragging = false;\n\n  countries;\n  cities;\n  regions;\n  areas;\n\n  lat;\n  lng;\n\n  selectedAddress;\n\n  type;\n\n  receiverID;\n\n  public addressInfoForm: FormGroup;\n  constructor(\n    public modalController: ModalController,\n    private platform: Platform,\n    public loadingCtrl: LoadingController,\n    public toastCtrl: ToastController,\n    public apiService: ApiService,\n    public formBuilder: FormBuilder,\n    private navCtrl: NavController,\n    private authService: AuthService,\n    private navParams: NavParams,\n    public _translate: TranslateService\n  ) {\n    this.addressInfoForm = formBuilder.group({\n      address_name: ['', Validators.required],\n      country_id: ['', Validators.required],\n      state_id: ['', Validators.required],\n      city_id: ['', Validators.required],\n      area_id: [null],\n      postal_code: [null]\n    });\n  }\n\n  async ngOnInit() {\n    await this.platform.ready();\n    this.getCountries();\n    this.type = this.navParams.get('type');\n    this.receiverID = this.navParams.get('receiverID');\n    // console.log(this.type);\n    // console.log(this.receiverID);\n    this.dummyMarker = document.getElementById('DummyMarker');\n  }\n\n  ngOnDestroy() {\n    const nodeList = document.querySelectorAll('._gmaps_cdv_');\n    for (let k = 0; k < nodeList.length; ++k) {\n      nodeList.item(k).classList.remove('_gmaps_cdv_');\n    }\n  }\n\n\n  async createLoader () {\n    let loader = await this.loadingCtrl.create({\n      message: this._translate.instant('general.please_wait')\n    });\n    loader.present();\n    return loader;\n  }\n\n  async getCountries() {\n    let loader = await this.createLoader()\n    this.apiService.getCountries()\n    .pipe(finalize(() => loader.dismiss()))\n    .subscribe((countries: any) => {\n      this.countries = countries;\n    });\n  }\n\n  async getRegions() {\n    let loader = await this.createLoader()\n    this.apiService\n      .getRegions(this.addressInfoForm.get('country_id').value)\n      .pipe(finalize(() => loader.dismiss()))\n      .subscribe((regions: any) => {\n        this.regions = regions;\n      });\n  }\n\n  async getCities() {\n    let loader = await this.createLoader()\n    this.apiService\n      .getCities(this.addressInfoForm.get('state_id').value)\n      .pipe(finalize(() => loader.dismiss()))\n      .subscribe((cities: any) => {\n        this.cities = cities;\n      });\n  }\n\n  async getAreas() {\n    let loader = await this.createLoader()\n    this.getAddressCenter();\n    this.apiService\n      .getAreas(this.addressInfoForm.get('city_id').value)\n      .pipe(finalize(() => loader.dismiss()))\n      .subscribe((areas: any) => {\n        this.areas = areas;\n      });\n  }\n\n  searchForName(itemID, arrayItems) {\n    const res = arrayItems.filter(item => item.id === itemID);\n    // console.log(res);\n    return res[0].name;\n  }\n\n  ionViewDidEnter() {\n    this.loadMap();\n  }\n\n  async closeModal() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n\n  loadMap() {\n    Environment.setEnv({\n      API_KEY_FOR_BROWSER_RELEASE: 'AIzaSyDvYLf1yswB12mE2qGDxDmlBJOF_Su-CCs',\n      API_KEY_FOR_BROWSER_DEBUG: 'AIzaSyDvYLf1yswB12mE2qGDxDmlBJOF_Su-CCs'\n    });\n    this.map = GoogleMaps.create(this.mapCanvas.nativeElement, {\n      camera: {\n        target: {\n          lat: 31.032260599999997,\n          lng: 31.36069329999998\n        },\n        zoom: 5\n      }\n    });\n    this.map.getMyLocation().then((location: MyLocation) => {\n      // console.log(JSON.stringify(location, null, 2));\n\n      // Move the map camera to the location with animation\n      this.map.animateCamera({\n        target: location.latLng,\n        zoom: 5\n      });\n    });\n    this.map\n      .addEventListener(GoogleMapsEvent.CAMERA_MOVE_START)\n      .subscribe(data => {\n        this.mapDragging = true;\n        this.dummyMarker.classList.add('dragging');\n        // console.log('Dragging');\n      });\n    this.map\n      .addEventListener(GoogleMapsEvent.CAMERA_MOVE_END)\n      .subscribe(data => {\n        // console.log(data);\n        this.mapDragging = false;\n        this.dummyMarker.classList.remove('dragging');\n        // console.log(this.map.getCameraTarget());\n        const location = this.map.getCameraTarget();\n        this.lat = location.lat;\n        this.lng = location.lng;\n        // console.log(this.lat);\n        // console.log(this.lng);\n      });\n  }\n\n  async getAddressCenter() {\n    const addressArray = {\n      country: this.searchForName(\n        this.addressInfoForm.get('country_id').value,\n        this.countries\n      ),\n      region: this.searchForName(\n        this.addressInfoForm.get('state_id').value,\n        this.regions\n      ),\n      city: this.searchForName(\n        this.addressInfoForm.get('city_id').value,\n        this.cities\n      )\n      // area: this.searchForName(\n      //   this.addressInfoForm.get('area_id').value,\n      //   this.areas\n      // )\n    };\n    const addressText = `${addressArray.city} ${addressArray.region} ${addressArray.country}`;\n    this.loading = await this.loadingCtrl.create({\n      message: this._translate.instant('general.please_wait')\n    });\n    await this.loading.present();\n    if(this.map) this.map.clear();\n\n    // Address -> latitude,longitude\n    // const searchAddress = `${this.addressInfoForm.get('')}`\n    Geocoder.geocode({\n      address: addressText\n    }).then((results: GeocoderResult[]) => {\n      // console.log(results);\n      this.loading.dismiss();\n\n      if (results.length > 0) {\n        this.map.animateCamera({\n          target: results[0].position,\n          zoom: 15\n        });\n        this.lat = results[0].position.lat;\n        this.lng = results[0].position.lng;\n        // console.log(this.lat);\n        // console.log(this.lng);\n      } else {\n        alert('Not found');\n      }\n    });\n  }\n  async getCurrentLocation() {\n    if(this.map) this.map.clear();\n\n    this.loading = await this.loadingCtrl.create({\n      message: this._translate.instant('general.please_wait')\n    });\n    await this.loading.present();\n\n    // Get the location of you\n    this.map\n      .getMyLocation()\n      .then((location: MyLocation) => {\n        this.loading.dismiss();\n        // console.log(JSON.stringify(location, null, 2));\n\n        // Move the map camera to the location with animation\n        this.map.animateCamera({\n          target: location.latLng,\n          zoom: 17,\n          tilt: 30\n        });\n      })\n      .catch(err => {\n        this.loading.dismiss();\n        // console.log(err.error_message);\n      });\n  }\n\n  async showToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      duration: 2000,\n      position: 'bottom'\n    });\n\n    toast.present();\n  }\n\n  async showCustomToast(message: string, msgColor: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      color: msgColor,\n      duration: 2000,\n      position: 'bottom'\n    });\n\n    toast.present();\n  }\n\n  addNewAddress() {\n    let desiredUser = this.authService.userData.id;\n    if (this.type === 'receiver' && this.receiverID) {\n      desiredUser = this.receiverID;\n    }\n    const addressData = {\n      data: this.addressInfoForm.value,\n      lat: this.lat,\n      lng: this.lng\n    };\n    this.apiService\n      .addSenderAddress(this.authService.userToken, desiredUser, addressData)\n      .subscribe(\n        (res: any) => {\n          this.showCustomToast(\n            `${this._translate.instant('new_address.new_address')} ( ${\n              res.name\n            } ) ${this._translate.instant('general.has_been_added')}`,\n            'success'\n          );\n          let addressFor;\n          if (this.type === 'receiver') {\n            addressFor = 'receiver';\n          } else {\n            addressFor = 'sender';\n          }\n          res.for = addressFor;\n          console.log(res);\n          this.modalController.dismiss(res, 'done');\n        },\n        error => {\n          this.showCustomToast(error, 'danger');\n        }\n      );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9uZXctcmVjZWl2ZXIvbmV3LXJlY2VpdmVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport {\n  ModalController,\n  Platform,\n  LoadingController,\n  ToastController,\n  NavController,\n  NavParams\n} from '@ionic/angular';\nimport { ApiService } from '../../services/api.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { LoadingService } from '../../services/ui/loading.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-new-receiver',\n  templateUrl: './new-receiver.component.html',\n  styleUrls: ['./new-receiver.component.scss']\n})\nexport class NewReceiverComponent implements OnInit {\n  public userForm: FormGroup;\n  constructor(\n    public modalController: ModalController,\n    private platform: Platform,\n    public loadingCtrl: LoadingController,\n    public toastCtrl: ToastController,\n    public apiService: ApiService,\n    public formBuilder: FormBuilder,\n    private navCtrl: NavController,\n    private authService: AuthService,\n    private navParams: NavParams,\n    public loadingUI: LoadingService,\n    public _translate: TranslateService\n  ) {\n    this.userForm = formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(5)]],\n      mobile: ['', [Validators.required, Validators.minLength(9)]]\n    });\n  }\n\n  ngOnInit() {}\n\n  async closeModal() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n\n  async showToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      duration: 2000,\n      position: 'bottom'\n    });\n\n    toast.present();\n  }\n\n  async showCustomToast(message: string, msgColor: string) {\n    const toast2 = await this.toastCtrl.create({\n      message,\n      color: msgColor,\n      duration: 2000,\n      position: 'bottom'\n    });\n\n    toast2.present();\n  }\n\n  addUser() {\n    this.loadingUI.simpleLoading();\n    this.apiService\n      .addNewReceiver(this.authService.userToken, this.userForm.value)\n      .subscribe(\n        (newRec: any) => {\n          this.loadingUI.loadingDismiss();\n          // console.log(newRec);\n          this.showCustomToast(\n            `${this._translate.instant('new_receiver.new_receiver')} ( ${\n              newRec.name\n            } ) ${this._translate.instant('general.has_been_added')}`,\n            'success'\n          );\n          this.modalController.dismiss(newRec, 'done');\n        },\n        error => {\n          this.loadingUI.loadingDismiss();\n          // console.log(error);\n          this.showCustomToast(\n            `${this._translate.instant('error.mobile_taken')}`,\n            'danger'\n          );\n        }\n      );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9wYXltZW50LWNhcmQvcGF5bWVudC1jYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n// import { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\nimport { AlertController, LoadingController, ModalController, NavParams } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICreateOrderRequest, IPayPalConfig } from 'ngx-paypal';\nimport { finalize } from 'rxjs/operators';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-payment-card',\n  templateUrl: './payment-card.component.html',\n  styleUrls: ['./payment-card.component.scss'],\n})\nexport class PaymentCardComponent implements OnInit {\n  view;\n  shipment;\n  totalAmount;\n\n  public payPalConfig:IPayPalConfig;\n\n\n  private doPay(): void {\n    this.payPalConfig = {\n      currency: 'USD',\n      clientId:\"sb\",\n      createOrderOnClient: (data) => <ICreateOrderRequest>{\n        intent: 'CAPTURE',\n        application_context:{\n          return_url:\"http://localhost:8100/tabs/home\",\n          payment_method:{\n            \"payee_preferred\": \"UNRESTRICTED\"\n          },\n        },\n        purchase_units: [\n          {\n            amount: {\n              currency_code: 'USD',\n              value: ''+this.totalAmount,\n              breakdown: {\n                item_total: {\n                  currency_code: 'USD',\n                  value: ''+this.totalAmount\n                }\n              }\n            },\n          }\n        ]\n      },\n      advanced: {\n        commit: 'true'\n      },\n      style: {\n        label: 'paypal',\n        layout: 'vertical'\n      },\n      onApprove: (data, actions) => {\n        console.log('onApprove - transaction was approved, but not authorized', data, actions);\n        this.errorPayment(this._translate.instant('general.paymentNoAuth'));\n      },\n      onClientAuthorization: (data) => {\n        this.paymentSuccess()\n      },\n      onError: err => {\n        console.log('OnError', err);\n        this.errorPayment(this._translate.instant('general.errorPayment'));\n      },\n    };\n  }\n\n  \n  constructor(\n    // private payPal: PayPal,\n    private navParams:NavParams,\n    public _translate:TranslateService,\n    private apiService:ApiService,\n    private authService:AuthService,\n    private modalCtrl:ModalController,\n    private alertCtrl:AlertController,\n    private loadingCtrl:LoadingController\n\n  ) { }\n\n  async showLoading() {\n    const loading = await this.loadingCtrl.create({\n      message: this._translate.instant('general.loading')\n    });\n    await loading.present();\n  }\n\n  async hideLoading() {\n    this.loadingCtrl.dismiss();\n  }\n  \n  ngOnInit() {\n    this.view = this.navParams.get('view');\n    this.shipment = this.navParams.get('shipment');\n    this.totalAmount =  this.navParams.get('amount');\n    this.doPay();\n  }\n\n\n\n  paymentSuccess() {\n    this.showLoading();\n\n    let params = {\n      token:this.authService.userToken,\n      id:this.shipment.id,\n      paymant_method:'paypal',\n      tax:(this.shipment.tax * +this.shipment.courier_fee_amount) / 100,\n      insurance: (this.shipment.insurance * +this.shipment.courier_fee_amount) / 100,\n      custom_value: +this.shipment.customs_value.substr(this.shipment.currency_id.currency_symbol.length),\n      return_courier_fee: +this.shipment.return_courier_fee_amount,\n      courier_fee:+this.shipment.courier_fee_amount,\n      package_fee:+this.shipment.package_fee_amount\n    }\n\n    this.apiService.payShipmentOrder(params)\n    .pipe(\n      finalize(() => this.hideLoading())\n    )\n    .subscribe(r => {\n      this.alertCtrl.create({\n        message:this._translate.instant('general.requestIsSent'),\n        buttons:[this._translate.instant('general.gotcha')]\n      }).then(a => {\n        a.present()\n        a.onDidDismiss().then(() => {\n          this.modalCtrl.dismiss('','','payShipment')\n        })\n      })\n      console.log('payShipmentOrder', r)\n    })\n\n  }\n\n\n  errorPayment(message) {\n    this.alertCtrl.create({\n      buttons:[this._translate.instant(\"general.gotcha\")]\n    })\n  }\n\n}\n\n\n/*\ntoken\nid or number for shipment\ncustom_value\ntax\ninsurance\nreturn_courier_fee\ncourier_fee\npackage_fee\npaymant_method  دي بحالتنا الحالية ثابتة القيمة لازم تحطها  paypal\n\n\n*/\n\n/*\n\n\n\nthis.payPal.init({\n      PayPalEnvironmentProduction: '',\n      PayPalEnvironmentSandbox: 'AWt7Zerxyd4Z2qvEprql2XgA5yl1oJv6TwucfZUdCogciyCzNJrfPwCp2-cbYEmkoZRoXTigFIbZ59l3'\n    }).then(() => {\n      // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n      this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n        // Only needed if you get an \"Internal Service Error\" after PayPal login!\n        //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n      })).then(() => {\n        \n        // let payment = new PayPalPayment(''+amount, this.shData.currency_id.currency_symbol, 'Description', 'sale');\n        let payment = new PayPalPayment(''+this.totalAmount, 'USD', 'Description', 'sale');\n        this.payPal.renderSinglePaymentUI(payment).then(() => {\n          // Successfully paid\n          console.log('uccessfully paid')\n          this.paymentSuccess()\n          // Example sandbox response\n          //\n          // {\n          //   \"client\": {\n          //     \"environment\": \"sandbox\",\n          //     \"product_name\": \"PayPal iOS SDK\",\n          //     \"paypal_sdk_version\": \"2.16.0\",\n          //     \"platform\": \"iOS\"\n          //   },\n          //   \"response_type\": \"payment\",\n          //   \"response\": {\n          //     \"id\": \"PAY-1AB23456CD789012EF34GHIJ\",\n          //     \"state\": \"approved\",\n          //     \"create_time\": \"2016-10-03T13:33:33Z\",\n          //     \"intent\": \"sale\"\n          //   }\n          // }\n        }, (e) => {\n          alert(' Error or render' + e)\n          // Error or render dialog closed without being successful\n        }); \n      }, () => {\n        // Error in configuration\n        alert('Error in configuration')\n      });\n    }, () => {\n      alert(\"Error in initialization, maybe PayPal isn't supported or something else\")\n      // Error in initialization, maybe PayPal isn't supported or something else\n    });\n\n\n*/","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewAddressComponent } from '../shared/new-address/new-address.component';\n\nimport { NewReceiverComponent } from '../shared/new-receiver/new-receiver.component';\n\nimport { ShipmentDetailsComponent } from '../shared/shipment-details/shipment-details.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PaymentCardComponent } from './payment-card/payment-card.component';\nimport { NgxPayPalModule } from 'ngx-paypal';\n\n@NgModule({\n  declarations: [\n    NewAddressComponent,\n    ShipmentDetailsComponent,\n    NewReceiverComponent,\n    PaymentCardComponent\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    NgxPayPalModule\n  ],\n  exports: [\n    NewAddressComponent,\n    ShipmentDetailsComponent,\n    NewReceiverComponent,\n    PaymentCardComponent\n  ],\n  entryComponents: [\n    NewAddressComponent,\n    ShipmentDetailsComponent,\n    NewReceiverComponent,\n    PaymentCardComponent\n  ]\n})\nexport class SharedModule {}\n","export default \".data-grid {\\n  text-align: start;\\n  font-size: 14px;\\n  font-weight: 400;\\n  margin-bottom: 10px;\\n}\\n.data-grid h4 {\\n  color: var(--ion-color-primary);\\n}\\n.data-grid ion-label {\\n  text-transform: uppercase;\\n}\\n.data-grid p span.dimmed {\\n  color: var(--ion-color-medium);\\n}\\nion-footer ion-button {\\n  display: block;\\n  margin: 0;\\n  border-radius: 0;\\n  --border-radius: 0;\\n  height: 45px;\\n  --height: 45px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zcG90bGF5ZXIvRG93bmxvYWRzL2NhcmdvLWN1c3RvbWVyL3NyYy9hcHAvc2hhcmVkL3NoaXBtZW50LWRldGFpbHMvc2hpcG1lbnQtZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2hhcmVkL3NoaXBtZW50LWRldGFpbHMvc2hpcG1lbnQtZGV0YWlscy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUNDRjtBREFFO0VBQ0UsK0JBQUE7QUNFSjtBREFFO0VBQ0UseUJBQUE7QUNFSjtBRENJO0VBQ0UsOEJBQUE7QUNDTjtBREtFO0VBQ0UsY0FBQTtFQUNBLFNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9zaGlwbWVudC1kZXRhaWxzL3NoaXBtZW50LWRldGFpbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YS1ncmlkIHtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgaDQge1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gIH1cbiAgaW9uLWxhYmVsIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG4gIHAge1xuICAgIHNwYW4uZGltbWVkIHtcbiAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcbiAgICB9XG4gIH1cbn1cblxuaW9uLWZvb3RlciB7XG4gIGlvbi1idXR0b24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIC0tYm9yZGVyLXJhZGl1czogMDtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgLS1oZWlnaHQ6IDQ1cHg7XG4gIH1cbn0iLCIuZGF0YS1ncmlkIHtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbi5kYXRhLWdyaWQgaDQge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xufVxuLmRhdGEtZ3JpZCBpb24tbGFiZWwge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLmRhdGEtZ3JpZCBwIHNwYW4uZGltbWVkIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xufVxuXG5pb24tZm9vdGVyIGlvbi1idXR0b24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICAtLWJvcmRlci1yYWRpdXM6IDA7XG4gIGhlaWdodDogNDVweDtcbiAgLS1oZWlnaHQ6IDQ1cHg7XG59Il19 */\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { NavParams, ModalController, LoadingController, AlertController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service';\nimport { ApiService } from '../../services/api.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GoogleMaps } from '@ionic-native/google-maps';\nimport { PusherService } from 'src/app/services/pusher.service';\nimport { finalize } from 'rxjs/operators';\nimport { PaymentCardComponent } from '../payment-card/payment-card.component';\n// import { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\n\n@Component({\n  selector: 'app-shipment-details',\n  templateUrl: './shipment-details.component.html',\n  styleUrls: ['./shipment-details.component.scss']\n})\nexport class ShipmentDetailsComponent implements OnInit {\n  // @ViewChild('map_canvas', { static: false }) mapCanvas: ElementRef;\n\n  shipmentID;\n  userToken;\n\n  shData;\n  dummyMarker;\n\n  locationStream\n  constructor(\n    public navParams: NavParams,\n    public modalController: ModalController,\n    public authService: AuthService,\n    public apiService: ApiService,\n    public _translate: TranslateService,\n    public loadingCtrl: LoadingController,\n    private alertCtrl:AlertController\n    // private payPal:PayPal\n    // private pusherService:PusherService\n  ) {}\n\n  messegeEvent = {\n    message: function(msg) {\n      console.log(msg.message);\n    }\n  }\n\n  ionViewWillLeave() {\n    // this.pusherService.pubnub.removeListener(this.messegeEvent);\n  }\n\n  amount = 100;\n  view;\n\n  openPaymentModal(amount, view) {\n    console.log(view)\n    console.log(amount)\n    this.amount = amount;\n    this.view = view;\n\n    // this.alertCtrl.create({\n    //   message:this._translate.instant('general.shipmentNeedPayment'),\n    //   buttons:[\n    //     {\n    //       text:this._translate.instant('actions.pay'),\n    //       handler:() => {\n    //         this.modalController.create({\n    //           component:PaymentCardComponent,\n    //           backdropDismiss:true,\n    //           id:'payShipment',\n    //           componentProps:{\n    //             amount:amount.toFixed(2),view,shipment:this.shData\n    //           }\n    //         }).then(m => m.present() )\n    //       }\n    //     },\n    //     {\n    //       text:this._translate.instant('actions.cancel'),\n    //       role:'cancel'\n    //     }\n    //   ]\n    // }).then(a => a.present())\n   \n  }\n\n  payForShipment () {\n    // this.alertCtrl.create({\n    //   message:this._translate.instant('general.shipmentNeedPayment'),\n    //   buttons:[\n    //     {\n    //       text:this._translate.instant('actions.pay'),\n    //       handler:() => {\n    //         this.modalController.create({\n    //           component:PaymentCardComponent,\n    //           backdropDismiss:true,\n    //           id:'payShipment',\n    //           componentProps:{\n    //             amount:this.amount.toFixed(2),view:this.view,shipment:this.shData\n    //           }\n    //         }).then(m => m.present() )\n    //       }\n    //     },\n    //     {\n    //       text:this._translate.instant('actions.cancel'),\n    //       role:'cancel'\n    //     }\n    //   ]\n    // }).then(a => a.present())\n\n\n    this.modalController.create({\n      component:PaymentCardComponent,\n      backdropDismiss:true,\n      id:'payShipment',\n      componentProps:{\n        amount:this.amount.toFixed(2),view:this.view,shipment:this.shData\n      }\n    }).then(m => m.present() )\n    \n  }\n  ngOnInit() {\n    // show payment modal if requested ==  \"Approved\" && payment_type == 2\n\n\n\n    console.log(this.authService.userData)\n    this.showLoading();\n    this.shipmentID = this.navParams.get('shipment_id');\n    this.userToken = this.navParams.get('userToken');\n    // console.log(this.shipmentID);\n    this.apiService\n      .getShipmentDetails(this.shipmentID, this.authService.userToken)\n      .pipe(finalize(() => this.hideLoading()))\n      .subscribe((shipment: any) => {\n        this.shData = shipment;\n\n        \n        // this.openPaymentModal(100,[{ name:'general.customs_value', amount:100 }])\n\n\n          console.log(shipment.paymentstatus ,this.shData);\n        if(shipment.paymentstatus == false) {\n          let tax = (shipment.tax * +shipment.courier_fee_amount) / 100,\n          insurance =  (shipment.insurance * +shipment.courier_fee_amount) / 100,\n          customs_value = +shipment.customs_value.substr(shipment.currency_id.currency_symbol.length),\n          amount = tax + insurance + +shipment.courier_fee_amount + customs_value;\n  \n          let paymentView = [\n            \n          ]\n  \n          if(tax) paymentView.push({ name:'general.tax', amount:tax })\n          if(insurance)  paymentView.push({ name:'general.insurance', amount:insurance })\n          if(+shipment.courier_fee_amount)  paymentView.push({ name:'general.courier_fee_amount', amount:+shipment.courier_fee_amount })\n          if(customs_value) paymentView.push({ name:'general.customs_value', amount:customs_value })\n  \n          \n  \n          var status = [1, 9 , 3, 4];\n          if (status.includes(shipment.requested)  && shipment.payment_type == 2) {\n            // prepaid\n            console.log('prepaid')\n            if (shipment.return_package_fee == 2 && shipment.sender.id == this.authService.userData.id) {\n              paymentView.push({name:'general.return_courier_fee', amount: +shipment.return_courier_fee_amount})\n              this.openPaymentModal(amount + +shipment.return_courier_fee_amount, paymentView)\n            } else if(+shipment.return_package_fee == 1 && shipment.receiver.id == this.authService.userData.id) {\n              paymentView = [\n                { name:'general.package_fee', amount: +shipment.package_fee_amount },\n                {name:'general.return_courier_fee', amount: +shipment.return_courier_fee_amount}\n              ]\n              this.openPaymentModal( +shipment.package_fee_amount + +shipment.return_courier_fee_amount, paymentView)\n            } else {\n              this.openPaymentModal(amount, paymentView)\n            }\n  \n            // postpaid\n          } else if (shipment.requested === 4 && shipment.payment_type == 1) {\n            console.log('postpaid')\n            if (shipment.return_defray == 1 && shipment.receiver.id === this.authService.userData.id ) {\n              paymentView.push( { name:'general.package_fee', amount: +shipment.package_fee_amount })\n              this.openPaymentModal(amount  + +shipment.package_fee_amount, paymentView)\n            } else if (shipment.return_package_fee == 1 && shipment.receiver.id === this.authService.userData.id ) {\n              paymentView.push({ name:'general.package_fee', amount: +shipment.package_fee_amount }, { name:'general.return_courier_fee', amount: shipment.return_courier_fee_amount })\n              this.openPaymentModal(amount  + +shipment.package_fee_amount + +shipment.return_courier_fee_amount, paymentView)\n            } else if (shipment.return_package_fee == 2 && shipment.sender.id == this.authService.userData.id) {\n              paymentView = [\n                {name:'general.return_courier_fee', amount: +shipment.return_courier_fee_amount}\n              ]\n              this.openPaymentModal(+shipment.return_courier_fee_amount, paymentView)\n            } else {\n              this.openPaymentModal(amount, paymentView)\n            }\n  \n          }\n\n        }\n        \n\n        // this.openPaymentModal()\n\n        // if(this.shData.assigned && this.shData.assigned.id) {\n        //   this.pusherService.pubnub.subscribe({\n        //     channels: [this.shData.assigned.id]\n        //   });\n          \n        //   this.pusherService.pubnub.addListener(this.messegeEvent)\n        // }\n        \n\n        \n\n/*\n        setInterval(() => {\n          this.pusherService.uploadPusher.trigger('location' + this.shData.assigned.id, 'client-updateLocation', {lat:'d', lngl:''})\n\n          // let x = this.pusherService.pusher.send_event('client-updateLocation',  {lat:'d', lngl:''} , 'location'+this.shData.assigned.id )\n          // console.log('send eeveen', x)\n        }, 1000)\n\n\n        console.log(this.shData.assigned.id, this.pusherService.pusher);\n\n        this.locationStream = this.pusherService.pusher.subscribe( 'location' + this.shData.assigned.id);\n        this.locationStream.trigger('client-updateLocation', {lat:'d', lngl:''})\n\n        console.log(this.locationStream)\n        this.locationStream.bind('client-updateLocation', (Data) =>{\n          console.log('Data pusher', Data);\n        });\n        this.pusherService.pusher.bind('client-updateLocation', (Data) =>{\n          console.log('Data pusher', Data);\n        });\n        \n        this.pusherService.pusher.bind('error', (Data) =>{\n          console.log('Data pusher', Data);\n        });*/\n        \n      \n      });\n\n\n      this.dummyMarker = document.getElementById('DummyMarker');\n  }\n  async closeModal() {\n    this.modalController.dismiss();\n  }\n\n  async showLoading() {\n    const loading = await this.loadingCtrl.create({\n      message: this._translate.instant('general.loading')\n    });\n    await loading.present();\n  }\n\n  async hideLoading() {\n    this.loadingCtrl.dismiss();\n  }\n/*\n  map\n  loadMap() {\n    \n    this.map = GoogleMaps.create(this.mapCanvas.nativeElement, {\n      camera: {\n        target: {\n          lat: 31.032260599999997,\n          lng: 31.36069329999998\n        },\n        zoom: 5\n      }\n    });\n  }\n\n  fetchDate() {\n    this.map.clear();\n    this.map.animateCamera({\n      target: {\n        lat: 5,\n        lng: 7,\n      },\n      zoom: 17,\n      tilt: 30\n    });\n  }*/\n}\n\n\n\n/*\n\nprepaid \n\n\n$amount = tax + insurance + custom value + curiour fee\n\nif (return_package_fee == 2) //sender\n$amount = $amount + return_courier_fee\n\n\n\n\nwhen shipment was received the receiver should pay\n\n$amount = package_fee\n\nif (return_package_fee == 1)\n$amount = $amount + return_courier_fee\n\n\n\n*/\n\n\n\n/*\n\n\n\npostpaid \n\n\n\n// reciever\n$amount = tax + insurance + custom value + curiour fee \n\nif(return_defray = 1)\n  $amount = amount +  package_fee\n\n\n\nif (return_package_fee == 1)\n  $amount =amount + return_courier_fee   + package_fee\n\n\n\n\nwhen returned value was received the sender should pay\n\n\n\n&\n\n\n// sender\n\nif (return_package_fee == 2)\n\n\n$amount = return_courier_fee\n\n*/"],"sourceRoot":"webpack:///"}